<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.3.6.1" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>LyX Document</title>
<style type='text/css'>
/* Layout-provided Styles */
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
h3.subsection_ {
font-weight: bold;
font-size: medium;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
h2.section {
font-weight: normal;
font-style: normal;
font-variant: small-caps;
font-size: medium;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.theorem {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.theorem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.note {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.note_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.notation {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.notation_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.assumption {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.assumption_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.definition {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.definition_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
div.remark {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.remark_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
div.Shadowbox { border: solid gray medium; border-bottom: solid black 1ex; border-right: solid black 1ex; padding: 0.5ex; }
div.float {
	border: 2px solid black;
	text-align: center;
}
div.float-caption {
	text-align: center;
	border: 2px solid black;
	padding: 1ex;
	margin: 1ex;
}


</style>
</head>
<body dir="auto">


<div class="standard" id='magicparlabel-1'><div class='Shadowbox'><div class="plain_layout" id='magicparlabel-10'>Machine Learning and Neural Networks (MATH3431)&nbsp;&nbsp;Epiphany term, 2023<div style='height:3ex'></div></div>

<div class="plain_layout" style='text-align: center;' id='magicparlabel-11'> Handout 1: Gradient descent <div style='height:3ex'></div></div>

<div class="plain_layout" id='magicparlabel-28'>Lecturer &amp; author: Georgios P. Karagiannis <a href="georgios.karagiannis@durham.ac.uk">georgios.karagiannis@durham.ac.uk</a></div>

<div class="plain_layout" id='magicparlabel-29'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-30'>Aim</h3>
<div class="plain_layout" id='magicparlabel-31'>To introduce gradient descent, its motivation, description, practical tricks, analysis in the convex scenario, and implementation.</div>

<div class="plain_layout" id='magicparlabel-32'><hr />

</div>

<div class="plain_layout" id='magicparlabel-33'>**This handout is still Under construction</div>
</div></div>
<h2 class="section" id='magicparlabel-40'><span class="section_label">1</span> Motivations</h2>

<div class="standard" id='magicparlabel-41'><br />

</div>

<div class="note" id='magicparlabel-42'><div class="note_item"><span class="note_label">Note 1.</span>
Consider a learning problem <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle><mo>,</mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle><mo>,</mo><mi> &ell; </mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math>. Learning may involve the computation of the minimizer <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle>
  </mrow>
 </mrow></math>, where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>H</mi>
  </mstyle>
 </mrow></math> is a class of hypotheses, of the empirical risk function (ERF) <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mover>
    <mrow><mi>R</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>h</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </mfrac>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </msubsup><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo>,</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> given a finite sample <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <mrow>
   <msub>
    <mrow><mi>z</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo>;</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> generated from the data generating model <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>g</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> and loss <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>; that is <a id="eq_emfmin" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup><mo>=</mo><mo> arg </mo>
     <msub>
      <mrow><mo> min </mo>
      </mrow>
      <mrow>
       <mrow><mi> &forall; </mi><mi>h</mi><mo> &isin; </mo>
        <mstyle mathvariant='script'><mi>H</mi>
        </mstyle>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mover>
       <mrow><mi>R</mi>
       </mrow><mo stretchy="true">&circ;</mo>
      </mover><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>h</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(1.1)
   </mtd>
  </mtr>
 </mtable></math> If analytical minimization of <a href="#eq_emfmin">(1.1)</a> is impossible or impractical, numerical procedures can be applied; eg Gradient descent. Such approaches introduce additional errors in the solution. </div>
</div>
<h2 class="section" id='magicparlabel-43'><span class="section_label">2</span> Description</h2>

<div class="standard" id='magicparlabel-44'><br />

</div>

<div class="notation" id='magicparlabel-45'><div class="notation_item"><span class="notation_label">Notation 2.</span>
For the sake of simplicity and generalization, we will present Gradient descent in the following minimization problem<a id="eq_gvbzvcb" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup><mo>=</mo><mo> arg </mo>
     <msub>
      <mrow><mo> min </mo>
      </mrow>
      <mrow>
       <mrow><mi> &forall; </mi><mi>w</mi><mo> &isin; </mo>
        <mstyle mathvariant='script'><mi>H</mi>
        </mstyle>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.1)
   </mtd>
  </mtr>
 </mtable></math> where here <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo>:</mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> , and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle><mo> &sube; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>. Eg, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math> can be an ERF.</div>
</div>

<div class="standard" id='magicparlabel-46'><br />

</div>

<div class="assumption" id='magicparlabel-47'><div class="assumption_item"><span class="assumption_label">Assumption 3.</span>
Assume (for now) that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo>:</mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> is differential function.</div>
</div>

<div class="standard" id='magicparlabel-48'><br />

</div>

<div class="definition" id='magicparlabel-49'><div class="definition_item"><span class="definition_label">Definition 4.</span>
The Gradient descent algorithm for the solution of the minimization problem <a href="#eq_gvbzvcb">2.1</a> is in Algorithm <a href="#alg_Gradient_descent_algorithm">1</a> where <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mi> &part; </mi>
       </mrow>
       <mrow>
        <mrow><mi> &part; </mi>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mn>1</mn>
          </mrow>
         </msub>
        </mrow>
       </mrow>
      </mfrac><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
      <mi>&hellip;
      </mi><mo>,</mo>
      <mfrac>
       <mrow><mi> &part; </mi>
       </mrow>
       <mrow>
        <mrow><mi> &part; </mi>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mi>d</mi>
          </mrow>
         </msub>
        </mrow>
       </mrow>
      </mfrac><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>is the gradient of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math> at .
<div class='float-algorithm'><ul class="itemize" id='magicparlabel-53'><li class="itemize_item">For <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>t</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>...</mn><mi>T</mi>
  </mrow>
 </mrow></math>, iterate:</li>
</ul>
<div class="plain_layout" id='magicparlabel-54'><math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>=</mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>+</mo>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></div>

<div class="plain_layout" id='magicparlabel-55'><span class='float-caption-Standard float-caption float-caption-standard'>Algorithm 1:  <a id="alg_Gradient_descent_algorithm" />
Gradient descent algorithm </span></div>


</div>
</div>
</div>

<div class="standard" id='magicparlabel-61'><br />

</div>

<div class="remark" id='magicparlabel-62'><div class="remark_item"><span class="remark_label">Remark 5.</span>
As a motivation, consider the 2nd-Taylor polinomial for the approximation of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> around for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>u</mi>
 </mrow></math> in a small area around <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math><math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>u</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ap; </mo><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>u</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo> &lang; </mo><mi>u</mi><mo>-</mo><mi>w</mi><mo>,</mo><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math>Assuming convexity for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math>, it is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>u</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo><munder accent='false'>
   <munder>
    <mrow>
     <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo> &lang; </mo><mi>u</mi><mo>-</mo><mi>w</mi><mo>,</mo><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
     </mrow>
    </mrow><mo stretchy="true">&UnderBrace;</mo>
   </munder>
   <mrow><mo>=</mo><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>u</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow></munder>
  </mrow>
 </mrow></math> meaning that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>P</mi>
 </mrow></math> lower bounds <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math>. Hence we could design an update mechanism producing <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
 </mrow></math> that is nearby <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
 </mrow></math> (small steps) and <a id="eq_dssdtg" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ap; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo> &lang; </mo><mi>w</mi><mo>-</mo>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup><mo>,</mo><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mn>.</mn>
    </mrow>
   </mtd>
   <mtd>(2.2)
   </mtd>
  </mtr>
 </mtable></math> Hence we could recursively minimize the approximation <a href="#eq_dssdtg">(2.2)</a> and the distance between the current state <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
 </mrow></math> and the next <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math> value to produce <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
 </mrow></math>; namely <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup><mo>=</mo>
    </mrow>
   </mtd>
   <mtd>
    <mrow><mo> arg </mo>
     <msub>
      <mrow><mo> min </mo>
      </mrow>
      <mrow>
       <mrow><mi> &forall; </mi><mi>w</mi>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </mfrac><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

      <mrow><mi>w</mi><mo>-</mo>
       <msup>
        <mrow><mi>w</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>+</mo><mi> &eta; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mo>=</mo>
   </mtd>
   <mtd>
    <mrow><mo> arg </mo>
     <msub>
      <mrow><mo> min </mo>
      </mrow>
      <mrow>
       <mrow><mi> &forall; </mi><mi>w</mi>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </mfrac><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

      <mrow><mi>w</mi><mo>-</mo>
       <msup>
        <mrow><mi>w</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>+</mo><mi> &eta; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <msup>
        <mrow><mi>w</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mo> &lang; </mo><mi>w</mi><mo>-</mo>
       <msup>
        <mrow><mi>w</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo>,</mo><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <msup>
        <mrow><mi>w</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

         <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
         </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mo>=</mo>
   </mtd>
   <mtd>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup><mo>+</mo>
     <msub>
      <mrow><mi> &eta; </mi>
      </mrow>
      <mrow><mi>t</mi>
      </mrow>
     </msub><mi> &nabla; </mi><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math> where parameter <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &eta; </mi><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math> controls the trade off.</div>
</div>

<div class="standard" id='magicparlabel-63'><br />

</div>

<div class="remark" id='magicparlabel-64'><div class="remark_item"><span class="remark_label">Remark 6.</span>
The output of GD can be (but not a exclusively), the average<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msubsup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>G</mi><mi>D</mi>
      </mrow>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>T</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msubsup><mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mi>T</mi>
    </mrow>
   </mfrac>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>t</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>T</mi>
    </mrow>
   </msubsup><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> after discarding the first few iterations of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
 </mrow></math> for stability reasons, or the best value discovered<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msubsup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>G</mi><mi>D</mi>
      </mrow>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>T</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msubsup><mo>=</mo><mo> arg </mo>
   <msub>
    <mrow><mo> min </mo>
    </mrow>
    <mrow>
     <mrow><mi> &forall; </mi>
      <msub>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mi>t</mi>
       </mrow>
      </msub>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
    </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> or the last value discovered <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msubsup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>G</mi><mi>D</mi>
      </mrow>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>T</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msubsup><mo>=</mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup>
  </mrow>
 </mrow></math></div>
</div>

<div class="standard" id='magicparlabel-65'><br />

</div>

<div class="note" id='magicparlabel-66'><div class="note_item"><span class="note_label">Note 7.</span>
<a id="note_GD_algorithm_converges" />
GD algorithm converges to a local minimum, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msubsup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>G</mi><mi>D</mi>
      </mrow>
     </mstyle>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>T</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msubsup><mo> &rarr; </mo>
   <msub>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msub>
  </mrow>
 </mrow></math>, under different sets of regularity conditions (some weaker other stronger). In Section <a href="#sec_Analysis">4</a> perform an analysis.</div>
</div>

<div class="standard" id='magicparlabel-67'><br />

</div>

<div class="remark" id='magicparlabel-68'><div class="remark_item"><span class="remark_label">Remark 8.</span>
The parameter <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &eta; </mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
 </mrow></math> is called learning rate, step size, or gain. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi> &eta; </mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> is a non-negative sequence and it is chosen by the practitioner. Regularity conditions (Note <a href="#note_GD_algorithm_converges">7</a>) often imply restrictions on the decay of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi> &eta; </mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> which guide the practitioner to parametrise it properly. Some popular choices of learning rate <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &eta; </mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
 </mrow></math>are:</div>

<ol class="enumerate" id='magicparlabel-69'><li class="enumerate_item">constant; <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo><mi> &eta; </mi>
  </mrow>
 </mrow></math>, where where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &eta; </mi>
 </mrow></math> is a small value. The rational is that GD chain <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> performs constant small steps towards the (local) minimum <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msub>
 </mrow></math> and then oscillate around it. </li>
<li class="enumerate_item"><a id="enu_decreasing_and_converging" />
decreasing and converging to zero; e.g. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mfrac>
      <mrow><mi>C</mi>
      </mrow>
      <mrow><mi>t</mi>
      </mrow>
     </mfrac>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &sigmav; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &sigmav; </mi><mo> &isin; </mo><mo>(</mo><mn>0.5</mn><mo>,</mo><mn>1</mn><mo>]</mo>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>C</mi><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math>. The rational is that GD algorithm at the begining starts by performing larger step to explore the area for discovering possible minima while reducing the size of the steps with the iterations to converge to a possible <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msub>
 </mrow></math> value. </li>
<li class="enumerate_item">decreasing and converging to a tiny value <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi> &tau; </mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msub>
 </mrow></math>; e.g. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mfrac>
      <mrow><mi>C</mi>
      </mrow>
      <mrow><mi>t</mi>
      </mrow>
     </mfrac>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &sigmav; </mi>
    </mrow>
   </msup><mo>+</mo>
   <msub>
    <mrow><mi> &tau; </mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &sigmav; </mi><mo> &isin; </mo><mo>(</mo><mn>0.5</mn><mo>,</mo><mn>1</mn><mo>]</mo>
  </mrow>
 </mrow></math> , <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>C</mi><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math>, and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &tau; </mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msub><mo> &ap; </mo><mn>0</mn>
  </mrow>
 </mrow></math>. Same as previously, but the algorithm aims at oscillating around the detected local minimum. </li>
<li class="enumerate_item"><a id="enu_constant_until_an" />
constant until an iteration <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>T</mi>
   </mrow>
   <mrow><mn>0</mn>
   </mrow>
  </msub>
 </mrow></math> and then decreasing; eg <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mfrac>
      <mrow><mi>C</mi>
      </mrow>
      <mrow>
       <mrow><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow><mi>t</mi><mo>,</mo>
         <msub>
          <mrow><mi>T</mi>
          </mrow>
          <mrow><mn>0</mn>
          </mrow>
         </msub>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </mrow>
     </mfrac>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &sigmav; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> , where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &sigmav; </mi><mo> &isin; </mo><mo>(</mo><mn>0.5</mn><mo>,</mo><mn>1</mn><mo>]</mo>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>C</mi><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math>. The rational is that in the first stage of the iterations the algorithm may need constant larger stems for a significant number of iterations in order to explore the domain and hence the chain <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> to reach the area around the (local) minimum <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msub>
 </mrow></math>. In the second stage the chain <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> may be in a close proximity to the (local) minimum <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msub>
 </mrow></math> and hence the algorithm needs to perform smaller steps to exploit (converge to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msub>
 </mrow></math>). The first stage is called burn-in and it is discarded from the output of the GD algorithm. </li>
</ol>
<div class="standard" id='magicparlabel-73'>Parameters <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>C</mi><mo>,</mo><mi> &sigmav; </mi><mo>,</mo>
   <msub>
    <mrow><mi> &tau; </mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> may be chosen based on pilot runs. A set of conditions for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi> &eta; </mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> are those from Robbins–Monro algorithm <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>t</mi><mo>=</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi> &infin; </mi>
      </mrow>
     </msubsup>
     <msub>
      <mrow><mi> &eta; </mi>
      </mrow>
      <mrow><mi>t</mi>
      </mrow>
     </msub><mo>=</mo><mi> &infin; </mi>
    </mrow>
   </mtd>
   <mtd>
    <mrow><mspace width="6px" /><mspace width="6px" /><mspace width="6px" />
     <mstyle mathvariant='normal'>
      <mrow><mi>a</mi><mi>n</mi><mi>d</mi>
      </mrow>
     </mstyle><mspace width="6px" /><mspace width="6px" /><mspace width="6px" />
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>t</mi><mo>=</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi> &infin; </mi>
      </mrow>
     </msubsup>
     <msubsup>
      <mrow><mi> &eta; </mi>
      </mrow>
      <mrow><mi>t</mi>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msubsup><mo>&lt;</mo><mi> &infin; </mi>
    </mrow>
   </mtd>
  </mtr>
 </mtable></math>(to be seen and discussed later), satisfied by items <a href="#enu_decreasing_and_converging">2.</a> and <a href="#enu_constant_until_an">4.</a>.</div>
</div>

<div class="standard" id='magicparlabel-74'><br />

</div>
<h2 class="section" id='magicparlabel-75'><span class="section_label">3</span> Examples</h2>
<h2 class="section" id='magicparlabel-76'><span class="section_label">4</span> Analysis<a id="sec_Analysis" />
</h2>
<h2 class="section" id='magicparlabel-77'><span class="section_label">5</span> Subgradients</h2>
</body>
</html>
