<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.3.6.1" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>LyX Document</title>
<style type='text/css'>
/* Layout-provided Styles */
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
h3.subsection_ {
font-weight: bold;
font-size: medium;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h2.section {
font-weight: normal;
font-style: normal;
font-variant: small-caps;
font-size: medium;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.theorem {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.theorem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.note {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.note_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.remark {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.remark_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.algorithm {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.algorithm_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
div.Shadowbox { border: solid gray medium; border-bottom: solid black 1ex; border-right: solid black 1ex; padding: 0.5ex; }


</style>
</head>
<body dir="auto">


<div class="standard" id='magicparlabel-1'><div class='Shadowbox'><div class="plain_layout" id='magicparlabel-10'>Machine Learning and Neural Networks (MATH3431)&nbsp;&nbsp;Epiphany term, 2023<div style='height:3ex'></div></div>

<div class="plain_layout" style='text-align: center;' id='magicparlabel-11'> Handout 4: Bayesian Learning with Stochastic gradient Langevin dynamics <div style='height:3ex'></div></div>

<div class="plain_layout" id='magicparlabel-28'>Lecturer &amp; author: Georgios P. Karagiannis <a href="georgios.karagiannis@durham.ac.uk">georgios.karagiannis@durham.ac.uk</a></div>

<div class="plain_layout" id='magicparlabel-29'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-30'>Aim</h3>
<div class="plain_layout" id='magicparlabel-31'>To introduce the stochastic gradient descent (motivation, description, practical tricks, analysis in the convex scenario, and implementation).</div>

<div class="plain_layout" id='magicparlabel-32'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-33'>Reading list &amp; references:</h3>

<ul class="itemize" id='magicparlabel-34'><li class="itemize_item">Welling, M., &amp; Teh, Y. W. (2011). Bayesian learning via stochastic gradient Langevin dynamics. In Proceedings of the 28th international conference on machine learning (ICML-11) (pp. 681-688).</li>
</ul>
<div class="plain_layout" id='magicparlabel-44'>This is subject to minor changes that will be decided based on the Lecture. It will be finalized around 1 day after the Lecture. It is given as guide before the lecture. </div>
</div></div>
<h2 class="section" id='magicparlabel-45'><span class="section_label">1</span> Motivations in Bayesian learning</h2>

<div class="note" id='magicparlabel-46'><div class="note_item"><span class="note_label">Note 1.</span>
Stochastic gradient Langevin dynamics (SGLD) algorithm can be used to facilitate Bayesian learning in high-dimensional and/or large scale dataset problems. SGLD produces samples from a posterior distribution of parameters based on available data, in the limit; like Langevin dynamics. SGLD is an iterative optimization algorithm which uses mini-batches to create a stochastic gradient estimator; like SGD. </div>
</div>

<div class="standard" id='magicparlabel-47'><br />

</div>

<div class="remark" id='magicparlabel-48'><div class="remark_item"><span class="remark_label">Remark 2.</span>
Consider a Bayesian statistical model with sampling distribution (statistical model) <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>z</mi><mo>|</mo><mi> &theta; </mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> labeled by an unknown parameter <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo><mo> &Theta; </mo><mo> &sube; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> that follows a prior distribution <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. Assume a dataset <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow>
     <mstyle mathvariant='script'><mi>S</mi>
     </mstyle>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>;</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> of size <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>n</mi>
 </mrow></math>. Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>L</mi>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow>
      <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
      </mrow>
     </mrow>
    </msub><mo>|</mo><mi>w</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> denotes the likelihood of the observables <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msubsup>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

    <mrow>
     <msub>
      <mrow><mi>z</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo> &isin; </mo>
     <mstyle mathvariant='script'><mi>Z</mi>
     </mstyle>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

   </mrow>
   <mrow>
    <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
    </mrow>
   </mrow>
   <mrow><mi>n</mi>
   </mrow>
  </msubsup>
 </mrow></math> for a parameter value of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &theta; </mi>
 </mrow></math>. The Bayesian model is<a id="eq_" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
    <mtable>
     <mtr>
      <mtd>
       <mrow>
        <msub>
         <mrow><mi>z</mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub><mo>|</mo><mi>w</mi>
       </mrow>
      </mtd>
      <mtd>
       <mrow><mo> &sim; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow>
         <msub>
          <mrow><mi>z</mi>
          </mrow>
          <mrow><mi>i</mi>
          </mrow>
         </msub><mo>|</mo><mi>w</mi>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </mtd>
     </mtr>
     <mtr>
      <mtd><mi>w</mi>
      </mtd>
      <mtd>
       <mrow><mo> &sim; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </mtd>
     </mtr>
    </mtable>
   </mtd>
   <mtd><mrow/>
   </mtd>
   <mtd>(1.1)
   </mtd>
  </mtr>
 </mtable></math>Given a posterior distribution <a id="eq__1" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi> &theta; </mi><mo>|</mo>
      <msub>
       <mrow><mi>z</mi>
       </mrow>
       <mrow>
        <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
        </mrow>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
     <mfrac>
      <mrow>
       <mrow>
        <msub>
         <mrow><mi>L</mi>
         </mrow>
         <mrow><mi>n</mi>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </mrow>
      <mrow>
       <mrow><mo> &int; </mo>
        <msub>
         <mrow><mi>L</mi>
         </mrow>
         <mrow><mi>n</mi>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        <mstyle mathvariant='normal'><mi>d</mi>
        </mstyle><mi>w</mi>
       </mrow>
      </mrow>
     </mfrac>
    </mrow>
   </mtd>
   <mtd>(1.2)
   </mtd>
  </mtr>
 </mtable></math> with (often) a computationally intractable density function, we are interested to compute the posterior expectation of a function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>h</mi>
 </mrow></math> defined on <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>W</mi>
 </mrow></math> <a id="eq__2" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow>
       <mstyle mathvariant='normal'><mi>E</mi>
       </mstyle>
      </mrow>
      <mrow><mi>f</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>|</mo>
      <msub>
       <mrow><mi>z</mi>
       </mrow>
       <mrow>
        <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
        </mrow>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &int; </mo><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>|</mo>
      <msub>
       <mrow><mi>z</mi>
       </mrow>
       <mrow>
        <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
        </mrow>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <mstyle mathvariant='normal'><mi>d</mi>
     </mstyle><mi>w</mi>
    </mrow>
   </mtd>
   <mtd>(1.3)
   </mtd>
  </mtr>
 </mtable></math> in order to perform inference. In real world problems, the integral <a href="#eq__2">(1.3)</a> cannot be analytically computed, and hence we have to resort to numerical methods.</div>
</div>

<div class="standard" id='magicparlabel-53'><br />

</div>

<div class="remark" id='magicparlabel-54'><div class="remark_item"><span class="remark_label">Remark 3.</span>
Monte Carlo integration aims at approximating <a href="#eq__2">(1.3)</a>, by using Central Limit Theorem or Law of Large Numbers arguments as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mover>
    <mrow><mi>h</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover><mo> &ap; </mo>
   <msub>
    <mrow>
     <mstyle mathvariant='normal'><mi>E</mi>
     </mstyle>
    </mrow>
    <mrow><mi>f</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>|</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow>
      <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
      </mrow>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> where<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mover>
    <mrow><mi>h</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover><mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mi>T</mi>
    </mrow>
   </mfrac>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>t</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>T</mi>
    </mrow>
   </msubsup><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> are <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>T</mi>
 </mrow></math> simulations drawn (approximately) from the posterior distribution <a href="#eq__1">1.2</a>. This theory is subject to conditions we skip. </div>
</div>

<div class="standard" id='magicparlabel-55'><br />

</div>

<div class="remark" id='magicparlabel-56'><div class="remark_item"><span class="remark_label">Remark 4.</span>
Stochastic gradient Langevin dynamics (SGLD) algorithm is able to generate a sample distributed according to the posterior distribution <a href="#eq__1">(1.2)</a> (approximately in the limit) as required to perform Monte Carlo. It is particularly suitable in read world problems where the conventionality of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math> is high and the size of the data-set (number of examples) <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>n</mi>
 </mrow></math> is huge (big data).</div>
</div>
<h2 class="section" id='magicparlabel-57'><span class="section_label">2</span> The Algorithm</h2>

<div class="note" id='magicparlabel-58'><div class="note_item"><span class="note_label">Note 5.</span>
SGLD is a framework for learning from large scale datasets based on iterative learning from small mini-batches. It relies on adding the right amount of noise to a standard stochastic gradient optimization algorithm, such that the produced chain converges to samples from the true posterior distribution as anneal the stepsize properly reduces.</div>
</div>

<div class="standard" id='magicparlabel-59'><br />

</div>

<div class="note" id='magicparlabel-60'><div class="note_item"><span class="note_label">Note 6.</span>
We assume that the likelihood <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>L</mi>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is differentiable for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo><mo> &Theta; </mo>
  </mrow>
 </mrow></math>, for simplicity. </div>
</div>

<div class="standard" id='magicparlabel-61'><br />

</div>

<div class="algorithm" id='magicparlabel-62'><div class="algorithm_item"><span class="algorithm_label">Algorithm 7.</span>
<a id="alg_Stochastic_Gradient_Langevin" />
Stochastic Gradient Langevin Dynamics (SGLD) with learning rate <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math>, batch size <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>m</mi>
 </mrow></math>, and temperature <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &tau; </mi><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math> is </div>

<ol class="enumerate" id='magicparlabel-63'><li class="enumerate_item"><i>Compute </i><math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>=</mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>+</mo>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <mfrac>
     <mrow><mi>n</mi>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </mfrac>
    <msub>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow>
      <mrow><mi>i</mi><mo> &isin; </mo>
       <msup>
        <mrow><mi>J</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
      </mrow>
     </mrow>
    </msub><mi> &nabla; </mi><mo> log </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>z</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>|</mo><mi>w</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mi> &nabla; </mi><mo> log </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo>
   <msqrt>
    <msub>
     <mrow><mi> &eta; </mi>
     </mrow>
     <mrow><mi>t</mi>
     </mrow>
    </msub>
   </msqrt>
   <msqrt><mi> &tau; </mi>
   </msqrt>
   <msub>
    <mrow><mi> &epsi; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &epsi; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo> &sim; </mo>
   <mstyle mathvariant='normal'><mi>N</mi>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> </li>
<li class="enumerate_item"><i>Iterate until a termination criterion is satisfied; E.g., <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>t</mi><mo> &le; </mo>
   <msub>
    <mrow><mi>T</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>m</mi><mi>a</mi><mi>x</mi>&nbsp;
      </mrow>
     </mstyle>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> for a prespecified <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>T</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>m</mi><mi>a</mi><mi>x</mi>&nbsp;
      </mrow>
     </mstyle>
    </mrow>
   </msub><mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math>.</i></li>
</ol>
</div>

<div class="standard" id='magicparlabel-65'><br />

</div>

<div class="remark" id='magicparlabel-66'><div class="remark_item"><span class="remark_label">Remark 8.</span>
SGLD (Algorithm <a href="#alg_Stochastic_Gradient_Langevin">7</a>) generates a random chain <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
  </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> that is asymptotically distributed according to a distribution with density such as <a id="eq__3" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi>f</mi>
      </mrow>
      <mrow><mi> &tau; </mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>|</mo>
      <msub>
       <mrow><mi>z</mi>
       </mrow>
       <mrow>
        <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
        </mrow>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &vprop; </mo>
    </mrow>
   </mtd>
   <mtd>
    <mrow><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mi> &tau; </mi>
       </mrow>
      </mfrac>
      <msubsup>
       <mrow><mo> &prod; </mo>
       </mrow>
       <mrow>
        <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
        </mrow>
       </mrow>
       <mrow><mi>n</mi>
       </mrow>
      </msubsup><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow>
       <msub>
        <mrow><mi>z</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mo>|</mo><mi>w</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.1)
   </mtd>
  </mtr>
  <mtr>
   <mtd><mo> &vprop; </mo>
   </mtd>
   <mtd>
    <mrow><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mi> &tau; </mi>
       </mrow>
      </mfrac>
      <msub>
       <mrow><mi>L</mi>
       </mrow>
       <mrow><mi>n</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.2)
   </mtd>
  </mtr>
 </mtable></math> Hence for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &tau; </mi><mo>=</mo><mn>1</mn>
  </mrow>
 </mrow></math> we may simulate from the posterior <a href="#eq__1">(1.2)</a>. </div>
</div>

<div class="standard" id='magicparlabel-67'><br />

</div>

<div class="remark" id='magicparlabel-68'><div class="remark_item"><span class="remark_label">Remark 9.</span>
The output of SGLD (Algorithm <a href="#alg_Stochastic_Gradient_Langevin">7</a>) is the last few iterations <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>;</mo><mi>t</mi><mo> &ge; </mo>
   <msub>
    <mrow><mi>T</mi>
    </mrow>
    <mrow><mn>0</mn>
    </mrow>
   </msub>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> , because we need to discard the first <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>T</mi>
   </mrow>
   <mrow><mn>0</mn>
   </mrow>
  </msub>
 </mrow></math> iterations from the output as burn in. This is done because at the first stage the chain of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mi>t</mi>
   </mrow>
  </msub>
 </mrow></math> generated by SGLD is trying to converge (aka to reach areas where with substantial posterior density). </div>
</div>

<div class="standard" id='magicparlabel-69'><br />

</div>

<div class="remark" id='magicparlabel-70'><div class="remark_item"><span class="remark_label">Remark 10.</span>
Expectation <a href="#eq__2">(1.3)</a>, aka<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow>
     <mstyle mathvariant='normal'><mi>E</mi>
     </mstyle>
    </mrow>
    <mrow><mi>f</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>|</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow>
      <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
      </mrow>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &int; </mo><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>w</mi><mo>|</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow>
      <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
      </mrow>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   <mstyle mathvariant='normal'><mi>d</mi>
   </mstyle><mi>w</mi>
  </mrow>
 </mrow></math> can be estimated as an arithmetic average<a id="eq__4" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <mover>
      <mrow>
       <mrow>
        <msub>
         <mrow><mi>h</mi>
         </mrow>
         <mrow><mi>T</mi>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </mrow><mo stretchy="true">&Hat;</mo>
     </mover><mo>=</mo>
     <mfrac>
      <mrow><mn>1</mn>
      </mrow>
      <mrow>
       <mrow><mi>T</mi><mo>-</mo>
        <msub>
         <mrow><mi>T</mi>
         </mrow>
         <mrow><mn>0</mn>
         </mrow>
        </msub>
       </mrow>
      </mrow>
     </mfrac>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>t</mi><mo>=</mo>
        <msub>
         <mrow><mi>T</mi>
         </mrow>
         <mrow><mn>0</mn>
         </mrow>
        </msub><mo>+</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi>T</mi>
      </mrow>
     </msubsup><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.3)
   </mtd>
  </mtr>
 </mtable></math>as by LLN <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mover>
    <mrow>
     <mrow>
      <msub>
       <mrow><mi>h</mi>
       </mrow>
       <mrow><mi>T</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
    </mrow><mo stretchy="true">&Hat;</mo>
   </mover><mo> &rarr; </mo>
   <msub>
    <mrow>
     <mstyle mathvariant='normal'><mi>E</mi>
     </mstyle>
    </mrow>
    <mrow><mi>f</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>|</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow>
      <mrow><mn>1</mn><mo>:</mo><mi>n</mi>
      </mrow>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> </div>
</div>

<div class="standard" id='magicparlabel-71'><br />

</div>

<div class="remark" id='magicparlabel-72'><div class="remark_item"><span class="remark_label">Remark 11.</span>
Another more efficient estimator for the expectation <a href="#eq__2">(1.3)</a> is the the weighted arithmetic average<a id="eq__4_1" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <mover>
      <mrow>
       <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </mrow><mo stretchy="true">&Hat;</mo>
     </mover><mo>=</mo>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>t</mi><mo>=</mo>
        <msub>
         <mrow><mi>T</mi>
         </mrow>
         <mrow><mn>0</mn>
         </mrow>
        </msub><mo>+</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi>T</mi>
      </mrow>
     </msubsup>
     <mfrac>
      <mrow>
       <msub>
        <mrow><mi> &eta; </mi>
        </mrow>
        <mrow><mi>t</mi>
        </mrow>
       </msub>
      </mrow>
      <mrow>
       <mrow>
        <msubsup>
         <mrow><mo> &sum; </mo>
         </mrow>
         <mrow>
          <mrow><mi>t</mi><mo>=</mo>
           <msub>
            <mrow><mi>T</mi>
            </mrow>
            <mrow><mn>0</mn>
            </mrow>
           </msub><mo>+</mo><mn>1</mn>
          </mrow>
         </mrow>
         <mrow><mi>T</mi>
         </mrow>
        </msubsup>
        <msub>
         <mrow><mi> &eta; </mi>
         </mrow>
         <mrow>
          <mrow><mi>t</mi><mo>'</mo>
          </mrow>
         </mrow>
        </msub>
       </mrow>
      </mrow>
     </mfrac><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
     </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.4)
   </mtd>
  </mtr>
 </mtable></math></div>
</div>

<div class="standard" id='magicparlabel-73'><br />

</div>
<h2 class="section" id='magicparlabel-74'><span class="section_label">3</span> Examples</h2>
</body>
</html>
