<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.3.6.1" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>LyX Document</title>
<style type='text/css'>
/* Layout-provided Styles */
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
h3.subsection_ {
font-weight: bold;
font-size: medium;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h2.section {
font-weight: normal;
font-style: normal;
font-variant: small-caps;
font-size: medium;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.theorem {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.theorem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.note {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.note_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.definition {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.definition_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.example {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.example_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.assumption {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.assumption_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.algorithm {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.algorithm_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.fact {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.fact_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.proof {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.proof_label {
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.proposition {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.proposition_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.Shadowbox { border: solid gray medium; border-bottom: solid black 1ex; border-right: solid black 1ex; padding: 0.5ex; }
div.float {
	border: 2px solid black;
	text-align: center;
}
div.float-caption {
	text-align: center;
	border: 2px solid black;
	padding: 1ex;
	margin: 1ex;
}
span.foot_label {
	vertical-align: super;
	font-size: smaller;
	font-weight: bold;
	text-decoration: underline;
}
div.foot {
	display: inline;
	font-size: small;
	font-weight: medium;
	font-family: serif;
	font-variant: normal;
	font-style: normal;
}
div.foot_inner { display: none; }
div.foot:hover div.foot_inner {
	display: block;
	border: 1px double black;
	margin: 0em 1em;
	padding: 1em;
}
div.Frameless { margin: 1em; }


</style>
</head>
<body dir="auto">


<div class="standard" id='magicparlabel-1'><div class='Shadowbox'><div class="plain_layout" id='magicparlabel-10'>Machine Learning and Neural Networks (MATH3431)&nbsp;&nbsp;Epiphany term, 2023<div style='height:3ex'></div></div>

<div class="plain_layout" style='text-align: center;' id='magicparlabel-11'> Draft Handout 6: Support Vector Machines <div style='height:3ex'></div></div>

<div class="plain_layout" id='magicparlabel-28'>Lecturer &amp; author: Georgios P. Karagiannis <a href="georgios.karagiannis@durham.ac.uk">georgios.karagiannis@durham.ac.uk</a></div>

<div class="plain_layout" id='magicparlabel-29'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-30'>Aim</h3>
<div class="plain_layout" id='magicparlabel-31'>To introduce the Support Vector Machines as a procedure. Motivation, set-up, description, computation, and implementation. We focus on the classical treatment.</div>

<div class="plain_layout" id='magicparlabel-32'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-33'>Reading list &amp; references:</h3>

<ol class="enumerate" id='magicparlabel-34'><li class="enumerate_item"><a id="enu_Shalev_Shwartz__S____" />
Shalev-Shwartz, S., &amp; Ben-David, S. (2014). Understanding machine learning: From theory to algorithms. Cambridge university press. 

<ul class="itemize" id='magicparlabel-35'><li class="itemize_item">Ch. 15 (pp. 167-170, 171-172, 176-177) Support Vector Machine</li>
</ul>
</li><li class="enumerate_item">Bishop, C. M. (2006). Pattern recognition and machine learning (Vol. 4, No. 4, p. 738). New York: Springer.

<ul class="itemize" id='magicparlabel-50'><li class="itemize_item">Ch. 7.1 Sparse Kernel Machines/Maximum marginal classifiers </li>
</ul>
</li></ol>
</div></div>
<h2 class="section" id='magicparlabel-51'><span class="section_label">1</span> Intro and motivation</h2>

<div class="note" id='magicparlabel-52'><div class="note_item"><span class="note_label">Note 1.</span>
Support Vector Machines (SVM) is a ML procedure for learning linear predictors in high-dimensional feature spaces with regards the sample complexity challenges.</div>
</div>

<div class="standard" id='magicparlabel-53'><br />

</div>

<div class="definition" id='magicparlabel-54'><div class="definition_item"><span class="definition_label">Definition 2.</span>
Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &ne; </mo><mn>0</mn>
  </mrow>
 </mrow></math>. Hyperplane in space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &sube; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> is called the sub-set <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>S</mi><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mi>x</mi><mo> &isin; </mo>
    <msup>
     <mrow>
      <mstyle mathvariant='double-struck'><mi>R</mi>
      </mstyle>
     </mrow>
     <mrow><mi>d</mi>
     </mrow>
    </msup><mo>:</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>
<mn>.</mn>
  </mrow>
 </mrow></math>It separates <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>X</mi>
  </mstyle>
 </mrow></math> in two half-spaces <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>S</mi>
    </mrow>
    <mrow><mo>+</mo>
    </mrow>
   </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mi>x</mi><mo> &isin; </mo>
    <msup>
     <mrow>
      <mstyle mathvariant='double-struck'><mi>R</mi>
      </mstyle>
     </mrow>
     <mrow><mi>d</mi>
     </mrow>
    </msup><mo>:</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi><mo>&gt;</mo><mn>0</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> and <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>S</mi>
    </mrow>
    <mrow><mo>-</mo>
    </mrow>
   </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mi>x</mi><mo> &isin; </mo>
    <msup>
     <mrow>
      <mstyle mathvariant='double-struck'><mi>R</mi>
      </mstyle>
     </mrow>
     <mrow><mi>d</mi>
     </mrow>
    </msup><mo>:</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi><mo>&lt;</mo><mn>0</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math></div>
</div>

<div class="standard" id='magicparlabel-55'><br />

</div>

<div class="definition" id='magicparlabel-56'><div class="definition_item"><span class="definition_label">Definition 3.</span>
<b>Halfspace</b> (hypothesis space) is hypotheses class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>H</mi>
  </mstyle>
 </mrow></math> designed for binary classification problems, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &sube; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mo>-</mo><mn>1</mn><mo>,</mo><mo>+</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> defined as 
<div style = "text-align: center;"><img src="lyxpreviewqshPGi1.png" alt="Mathematical Equation" />
</div>
 where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>b</mi>
 </mrow></math> is called bias. </div>
</div>

<div class="standard" id='magicparlabel-57'><br />

</div>

<div class="definition" id='magicparlabel-58'><div class="definition_item"><span class="definition_label">Definition 4.</span>
Each <b>halfspace hypothesis</b> <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle>
  </mrow>
 </mrow></math> has form <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>h</mi>
    </mrow>
    <mrow>
     <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
     </mrow>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mstyle mathvariant='normal'>
    <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
    </mrow>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, it takes an input in <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &sube; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> and returns an output in <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mo>-</mo><mn>1</mn><mo>,</mo><mo>+</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math>. We may refer to it as halfspace <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> as this setting determines it.</div>
</div>

<div class="note" id='magicparlabel-59'><div class="note_item"><span class="note_label">Note 5.</span>
&nbsp;Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>S</mi><mo>=</mo>
   <msubsup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
  </mrow>
 </mrow></math> be a training set of examples with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> the features and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &isin; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mo>-</mo><mn>1</mn><mo>,</mo><mo>+</mo><mn>1</mn>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> the labels. </div>
</div>

<div class="standard" id='magicparlabel-60'><br />

</div>

<div class="definition" id='magicparlabel-61'><div class="definition_item"><span class="definition_label">Definition 6.</span>
The training set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>S</mi>
 </mrow></math> is <b>linearly separable</b> if there exists a halfspace <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> such that for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
  </mrow>
 </mrow></math><math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo>=</mo>
   <mstyle mathvariant='normal'>
    <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
    </mrow>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>or equivalently <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>&gt;</mo><mn>0</mn>
  </mrow>
 </mrow></math></div>
</div>

<div class="standard" id='magicparlabel-62'><br />

</div>

<div class="note" id='magicparlabel-63'><div class="note_item"><span class="note_label">Note 7.</span>
Let the loss be <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi>z</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mstyle mathvariant='normal'><mn>1</mn>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>y</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &ne; </mo>
    <mstyle mathvariant='normal'>
     <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
     </mrow>
    </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, and hence the Empirical Risk Function be <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>R</mi>
    </mrow>
    <mrow><mi>S</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </mfrac>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
    <msub>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. The Empirical Risk Minimisation (ERM) halfspace <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo>,</mo>
   <msup>
    <mrow><mi>b</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo>
    <msup>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><munder accent='false'>
   <mrow><mo> arg </mo><mo> min </mo>
   </mrow>
   <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
   </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>R</mi>
     </mrow>
     <mrow><mi>S</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><munder accent='false'>
   <mrow><mo> arg </mo><mo> min </mo>
   </mrow>
   <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
   </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <mfrac>
     <mrow><mn>1</mn>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </mfrac>
    <msubsup>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow>
      <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
      </mrow>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </msubsup><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
     <msub>
      <mrow><mi>z</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></div>
</div>

<div class="standard" id='magicparlabel-64'><br />

</div>

<div class="definition" id='magicparlabel-65'><div class="definition_item"><span class="definition_label">Definition 8.</span>
<b>Margin of a hyper-plane</b> with respect to a training set is defined to be the minimal distance between a point in the training set and the hyper-plane.</div>
</div>

<div class="note" id='magicparlabel-66'><div class="note_item"><span class="note_label">Note 9.</span>
Support Vector Machines (SVM) aims at learning the maximum margin separating hyperplane Figure (<a href="#fig__1">1.1</a>; Right). The rational is that if a hyperplane has a large margin, then it will still separate the training set even if we slightly perturb each instance.</div>
</div>

<div class="standard" id='magicparlabel-67'><br />

</div>

<div class="example" id='magicparlabel-68'><div class="example_item"><span class="example_label">Example 10.</span>
Figure (<a href="#fig__1">1.1</a>; Left) shows two different separating hyper-planes for the same data set, Figure (<a href="#fig__1">1.1</a>; Right) shows the maximum margin hyper-plane: the margin <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &gamma; </mi>
 </mrow></math> is the distance from the hyper-plane (solid line) to the closest points in either class (which touch the parallel dotted lines). It is reasonable to prefer as a predictive rule the hyperplane on the right.  <div class='float-figure'><div class="plain_layout" id='magicparlabel-72'><img style='width:50%;' src='0_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____s_figures_06_Support_Vector_Machines_margin.png' alt='image: 0_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____s_figures_06_Support_Vector_Machines_margin.png' />
<span class='float-caption-Standard float-caption float-caption-standard'>Figure 1.1:  <a id="fig__1" />
</span></div>
</div>
</div>
</div>
<h2 class="section" id='magicparlabel-77'><span class="section_label">2</span> Hard Support Vector Machine </h2>

<div class="note" id='magicparlabel-78'><div class="note_item"><span class="note_label">Note 11.</span>
<a id="note_Hard_SVM_is_the" />
Hard Support Vector Machine (Hard-SVM) is the learning rule in which we return an ERM hyperplane that separates the training set with the largest possible margin.</div>
</div>

<div class="assumption" id='magicparlabel-79'><div class="assumption_item"><span class="assumption_label">Assumption 12.</span>
<a id="assu_Assume_the_training" />
Assume the training sample <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>S</mi><mo>=</mo>
   <msubsup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
  </mrow>
 </mrow></math> is linearly separable.</div>
</div>

<div class="standard" id='magicparlabel-80'><br />

</div>

<div class="algorithm" id='magicparlabel-81'><div class="algorithm_item"><span class="algorithm_label">Algorithm 13.</span>
<a id="alg__Hard_SVM__Given_a" />
&nbsp;(Hard-SVM) Given a linearly separable training sample <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>S</mi><mo>=</mo>
   <msubsup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
  </mrow>
 </mrow></math> the Hard-SVM rule for the binary classification problem is:</div>
<div class="standard" id='magicparlabel-82'><i>Solve<div class="foot"><span class="foot_label">1</span><div class="foot_inner"><div class="plain_layout" id='magicparlabel-86'>It is a quadratic programming problem.</div>
</div></div> <a id="eq__2" />
<a id="eq__3" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <mover>
      <mrow><mi>w</mi>
      </mrow><mo stretchy="true">&tilde;</mo>
     </mover><mo>,</mo>
     <mover>
      <mrow><mi>b</mi>
      </mrow><mo stretchy="true">&tilde;</mo>
     </mover>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mtd>
   <mtd>
    <mrow><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> min </mo>
     </mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
</munder>
     <msubsup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

      </mrow>
      <mrow><mn>2</mn>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msubsup>
    </mrow>
   </mtd>
   <mtd>(2.1)
   </mtd>
  </mtr>
  <mtr>
   <mtd>
    <mstyle mathvariant='normal'>
     <mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi>&nbsp;<mi>t</mi><mi>o</mi><mo>:</mo><mspace width="6px" /><mspace width="6px" /><mspace width="6px" />
     </mrow>
    </mstyle>
   </mtd>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo><mn>1</mn><mo>,</mo><mspace width="6px" /><mspace width="6px" /><mi> &forall; </mi><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
    </mrow>
   </mtd>
   <mtd>(2.2)
   </mtd>
  </mtr>
 </mtable></math></i></div>

<div class="standard" id='magicparlabel-87'><i>Scale <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mover>
    <mrow><mi>w</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover><mo>=</mo>
   <mfrac>
    <mrow>
     <mover>
      <mrow><mi>w</mi>
      </mrow><mo stretchy="true">&tilde;</mo>
     </mover>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     <mover>
      <mrow><mi>w</mi>
      </mrow><mo stretchy="true">&tilde;</mo>
     </mover>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
   </mfrac><mo>,</mo><mspace width="6px" /><mspace width="6px" />
   <mstyle mathvariant='normal'>
    <mrow><mi>a</mi><mi>n</mi><mi>d</mi>
    </mrow>
   </mstyle><mspace width="6px" /><mspace width="6px" />
   <mover>
    <mrow><mi>b</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover><mo>=</mo>
   <mfrac>
    <mrow>
     <mover>
      <mrow><mi>b</mi>
      </mrow><mo stretchy="true">&tilde;</mo>
     </mover>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     <mover>
      <mrow><mi>b</mi>
      </mrow><mo stretchy="true">&tilde;</mo>
     </mover>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
   </mfrac>
  </mrow>
 </mrow></math></i></div>
</div>

<div class="standard" id='magicparlabel-88'><br />

</div>

<div class="note" id='magicparlabel-89'><div class="note_item"><span class="note_label">Note 14.</span>
Following we show why Algorithm <a href="#alg__Hard_SVM__Given_a">13</a> produces a Hard-SVM hyperplane stated in Note <a href="#note_Hard_SVM_is_the">11</a>.</div>
</div>

<div class="standard" id='magicparlabel-90'><br />

</div>

<div class="fact" id='magicparlabel-91'><div class="fact_item"><span class="fact_label">Fact 15.</span>
<a id="fact_The_distance_between" />
The distance between a point <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>x</mi>
 </mrow></math> and the hyperplane defined by <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>=</mo><mn>1</mn>
  </mrow>
 </mrow></math> is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>|</mo>

  <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>|</mo>

 </mrow></math>.</div>

<div class="proof" id='magicparlabel-92'><div class="proof_item"><span class="proof_label">Proof.</span>
We skip it.</div>
</div>
</div>

<div class="standard" id='magicparlabel-93'><div class='Frameless'><div class="plain_layout" id='magicparlabel-97'><div class='Frameless' style='width: 60%; '><div class="note" id='magicparlabel-101'><div class="note_item"><span class="note_label">Note 16.</span>
On the right, see the geometry of Algorithm <a href="#alg__Hard_SVM__Given_a">13</a>. </div>
</div>

<div class="plain_layout" id='magicparlabel-102'><br />

</div>

<div class="note" id='magicparlabel-103'><div class="note_item"><span class="note_label">Note 17.</span>
Hard-SVM selects two parallel hyperplanes that separate the two classes of data so that the distance between them is as large as possible. The predictive hyperplane (rule) is the hyperplane that lies halfway between them.</div>
</div>

<div class="plain_layout" id='magicparlabel-104'><br />

</div>

<div class="note" id='magicparlabel-105'><div class="note_item"><span class="note_label">Note 18.</span>
Hard-SVM in Algorithm <a href="#alg__Hard_SVM__Given_a">13</a> searches for the hyperplane with minimum norm <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math> among all those that separate the data and have distance greater or equal to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mn>1</mn>
 </mrow></math>. </div>
</div>
</div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class='Frameless' style='width: 40%; '><div class="plain_layout" id='magicparlabel-109'><img style='width:100%;' src='1_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____gures_06_Support_Vector_Machines_SVM_margin.png' alt='image: 1_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____gures_06_Support_Vector_Machines_SVM_margin.png' />
</div>
</div></div>
</div></div>


<div class="standard" id='magicparlabel-110'><br />

</div>

<div class="proof" id='magicparlabel-111'><div class="proof_item"><span class="proof_label">Proof.</span>
(Sketch of the proof of Algorithm <a href="#alg__Hard_SVM__Given_a">13</a>)&nbsp; </div>

<ol class="enumerate" id='magicparlabel-112'><li class="enumerate_item">Based on Note <a href="#note_Hard_SVM_is_the">11</a>, and Fact <a href="#fact_The_distance_between">15</a>, the closest point in the training set to the separating hyperplane has distance <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mo> min </mo>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>|</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>|</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> hence, by definition, the Hard-SVM hypothesis should be such as <a id="eq_" />
<a id="eq__6" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup><mo>,</mo>
     <msup>
      <mrow><mi>b</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mtd>
   <mtd>
    <mrow><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> max </mo>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>=</mo><mn>1</mn>
     </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mo> min </mo>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>|</mo>

      <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>|</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.3)
   </mtd>
  </mtr>
  <mtr>
   <mtd>
    <mstyle mathvariant='normal'>
     <mrow>
      <mstyle mathvariant='normal'>
       <mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi>&nbsp;<mi>t</mi><mi>o</mi>
       </mrow>
      </mstyle><mspace width="6px" /><mspace width="6px" />
     </mrow>
    </mstyle>
   </mtd>
   <mtd>
    <mrow><mspace width="6px" />
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>&gt;</mo><mn>0</mn><mo>,</mo><mspace width="6px" /><mspace width="6px" /><mi> &forall; </mi><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
    </mrow>
   </mtd>
   <mtd>(2.4)
   </mtd>
  </mtr>
 </mtable></math> </li>
<li class="enumerate_item">If there is a solution in <a href="#eq_">(2.4)</a> then <a href="#eq_">(2.4)</a> is equivalent to <a id="eq__1" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msup>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup><mo>,</mo>
      <msup>
       <mrow><mi>b</mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> max </mo>
     </mrow>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>=</mo><mn>1</mn>
     </mrow></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mo> min </mo>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow>
       <msub>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
        <msub>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(2.5)
   </mtd>
  </mtr>
 </mtable></math></li>
<li class="enumerate_item">Next we show that <a href="#eq__1">2.5</a> is equivalent to the output of Algorithm <a href="#alg__Hard_SVM__Given_a">13</a>; i.e. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo>
    <msup>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <mover>
     <mrow><mi>w</mi>
     </mrow><mo stretchy="true">&circ;</mo>
    </mover><mo>,</mo>
    <mover>
     <mrow><mi>b</mi>
     </mrow><mo stretchy="true">&circ;</mo>
    </mover>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. 
<div class="standard" id='magicparlabel-115'>Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi> &gamma; </mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo>:</mo><mo>=</mo>
   <msub>
    <mrow><mo> min </mo>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>|</mo>

   <mrow><mo> &lang; </mo>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo>
    <msup>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>|</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. Firstly, because <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo>
    <msup>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo>
   <msup>
    <mrow><mi> &gamma; </mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mspace width="6px" /><mspace width="6px" /><mo> &harr; </mo><mspace width="6px" /><mspace width="6px" />
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <mfrac>
     <mrow>
      <msup>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup>
     </mrow>
     <mrow>
      <msup>
       <mrow><mi> &gamma; </mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup>
     </mrow>
    </mfrac><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo>
    <mfrac>
     <mrow>
      <msup>
       <mrow><mi>b</mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup>
     </mrow>
     <mrow>
      <msup>
       <mrow><mi> &gamma; </mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup>
     </mrow>
    </mfrac>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo><mn>1</mn>
  </mrow>
 </mrow></math> <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <mfrac>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi> &gamma; </mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
   </mfrac><mo>,</mo>
   <mfrac>
    <mrow>
     <msup>
      <mrow><mi>b</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi> &gamma; </mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
   </mfrac>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> satisfies condition <a href="#eq__3">(2.2)</a>. Secondly, I have <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

   <msub>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mn>0</mn>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo> &le; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

   <mfrac>
    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi> &gamma; </mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
   </mfrac>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi> &gamma; </mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
   </mfrac>
  </mrow>
 </mrow></math> because of <a href="#eq__2">(2.2)</a> and because of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo>=</mo><mn>1</mn>
  </mrow>
 </mrow></math>. Hence, for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
  </mrow>
 </mrow></math>, it is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <mover>
     <mrow><mi>w</mi>
     </mrow><mo stretchy="true">&circ;</mo>
    </mover><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo>
    <mover>
     <mrow><mi>b</mi>
     </mrow><mo stretchy="true">&circ;</mo>
    </mover>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     <msub>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mn>0</mn>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
   </mfrac>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <msub>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mn>0</mn>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo>
    <msub>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mn>0</mn>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     <msub>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mn>0</mn>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
   </mfrac><mo> &ge; </mo>
   <msup>
    <mrow><mi> &gamma; </mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> Hence <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <mover>
    <mrow><mi>w</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover><mo>,</mo>
   <mover>
    <mrow><mi>b</mi>
    </mrow><mo stretchy="true">&circ;</mo>
   </mover>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> is the optimal solution of <a href="#eq__1">(2.5)</a>.</div>
</li></ol>
</div>

<div class="standard" id='magicparlabel-116'><br />

</div>

<div class="definition" id='magicparlabel-117'><div class="definition_item"><span class="definition_label">Definition 19.</span>
<b>Homogeneous halfspaces</b> in SVM is the case where the halfspaces pass from the origin; that is when the bias term in <a href="#eq__3">2.2</a> is zero <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>b</mi><mo>=</mo><mn>0</mn>
  </mrow>
 </mrow></math>. </div>
</div>
<h2 class="section" id='magicparlabel-118'><span class="section_label">3</span> Soft Support Vector Machine </h2>

<div class="note" id='magicparlabel-119'><div class="note_item"><span class="note_label">Note 20.</span>
Hard-SVM assumes the strong Assumption <a href="#assu_Assume_the_training">12</a> that the training set is linearly separable, that might not always the case, and hence there is need to derive a procedure that weakens this assumption.</div>
</div>

<div class="standard" id='magicparlabel-120'><br />

</div>

<div class="note" id='magicparlabel-121'><div class="note_item"><span class="note_label">Note 21.</span>
Soft Support Vector Machine (Soft-SVM) aims to relax the strong assumption of Hard-SVM that the training set is linearly separable <a href="#eq__6">(2.4)</a> with purpose to be extend the scope of application. Soft-SVM is given below. I.e., Soft-SVM does not assume Assumption <a href="#assu_Assume_the_training">12</a>.</div>
</div>

<div class="standard" id='magicparlabel-122'><br />

</div>

<div class="algorithm" id='magicparlabel-123'><div class="algorithm_item"><span class="algorithm_label">Algorithm 22.</span>
<a id="alg__Hard_SVM__Given_a_1" />
&nbsp;(Soft-SVM) Given a training sample <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>S</mi><mo>=</mo>
   <msubsup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
  </mrow>
 </mrow></math> the Soft-SVM rule for the binary classification problem is:</div>
<div class="standard" id='magicparlabel-124'><i>Solve <a id="eq__2_1" />
<a id="eq__3_1" />
<a id="eq__5" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup><mo>,</mo>
     <msup>
      <mrow><mi>b</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup><mo>,</mo>
     <msup>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mtd>
   <mtd>
    <mrow><mo>=</mo><munder accent='false'>
     <mrow><mo> arg </mo><mo> min </mo>
     </mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>,</mo><mi>b</mi><mo>,</mo><mi> &xi; </mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
</munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi> &lambda; </mi>
      <msubsup>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

       </mrow>
       <mrow><mn>2</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msubsup><mo>+</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mi>m</mi>
       </mrow>
      </mfrac>
      <msubsup>
       <mrow><mo> &sum; </mo>
       </mrow>
       <mrow>
        <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
        </mrow>
       </mrow>
       <mrow><mi>m</mi>
       </mrow>
      </msubsup>
      <msub>
       <mrow><mi> &xi; </mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(3.1)
   </mtd>
  </mtr>
  <mtr>
   <mtd>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi>&nbsp;<mi>t</mi><mi>o</mi><mo>:</mo><mspace width="6px" /><mspace width="6px" />
      </mrow>
     </mstyle><mspace width="6px" />
    </mrow>
   </mtd>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo> &lang; </mo>
      <msup>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo> &rang; </mo><mo>+</mo>
      <msup>
       <mrow><mi>b</mi>
       </mrow>
       <mrow><mo>*</mo>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo><mn>1</mn><mo>-</mo>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo><mspace width="6px" /><mspace width="6px" /><mi> &forall; </mi><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
    </mrow>
   </mtd>
   <mtd>(3.2)
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo> &ge; </mo><mn>0</mn><mo>,</mo><mspace width="6px" /><mspace width="6px" /><mi> &forall; </mi><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
    </mrow>
   </mtd>
   <mtd>(3.3)
   </mtd>
  </mtr>
 </mtable></math></i></div>
</div>

<div class="note" id='magicparlabel-125'><div class="note_item"><span class="note_label">Note 23.</span>
To relax the linearly separable training set assumption, Soft-SVM relies on replacing the &ldquo;harder&rdquo; constraint <a href="#eq__3">(2.2)</a> with the &ldquo;softer&rdquo; one in <a href="#eq__3_1">3.3</a> through the introduction of non-negative unknown quantities <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msubsup>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

    <msub>
     <mrow><mi> &xi; </mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

   </mrow>
   <mrow>
    <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
    </mrow>
   </mrow>
   <mrow><mi>m</mi>
   </mrow>
  </msubsup>
 </mrow></math> controlling how much the separability assumption <a href="#eq__3">(2.2)</a> is violated. Soft-SVM learns all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>w</mi><mo>,</mo><mi>b</mi><mo>,</mo><mi> &xi; </mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> via the minimization part in <a href="#eq__2_1">(3.3)</a> where the trade off between the two terms is controlled via the user specified parameter <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &lambda; </mi>
 </mrow></math>.</div>
</div>

<div class="standard" id='magicparlabel-126'><br />

</div>

<div class="proposition" id='magicparlabel-127'><div class="proposition_item"><span class="proposition_label">Proposition 24.</span>
<a id="prop_Consider_the_hinge" />
Consider the hinge loss function <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi>z</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo><mi>y</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> and hence the Empirical Risk Function <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>R</mi>
    </mrow>
    <mrow><mi>S</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </mfrac>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo>
    <msub>
     <mrow><mi>y</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> Then the solution of Algorithm <a href="#alg__Hard_SVM__Given_a_1">22</a> is equivalent to the regularization problem <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo>
    <msup>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><munder accent='false'>
   <mrow><mo> arg </mo><mo> min </mo>
   </mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
</munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>R</mi>
     </mrow>
     <mrow><mi>S</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mi> &lambda; </mi>
    <msubsup>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     </mrow>
     <mrow><mn>2</mn>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msubsup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></div>

<div class="proof" id='magicparlabel-128'><div class="proof_item"><span class="proof_label">Proof.</span>
In Algorithm <a href="#alg__Hard_SVM__Given_a_1">22</a>, we consider <a id="eq__4" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><munder accent='false'>
     <mrow><mo> arg </mo><mo> min </mo>
     </mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
</munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mo> min </mo>
       </mrow>
       <mrow><mi> &xi; </mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi> &lambda; </mi>
       <msubsup>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

        </mrow>
        <mrow><mn>2</mn>
        </mrow>
        <mrow><mn>2</mn>
        </mrow>
       </msubsup><mo>+</mo>
       <mfrac>
        <mrow><mn>1</mn>
        </mrow>
        <mrow><mi>m</mi>
        </mrow>
       </mfrac>
       <msubsup>
        <mrow><mo> &sum; </mo>
        </mrow>
        <mrow>
         <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
         </mrow>
        </mrow>
        <mrow><mi>m</mi>
        </mrow>
       </msubsup>
       <msub>
        <mrow><mi> &xi; </mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>(3.4)
   </mtd>
  </mtr>
 </mtable></math> Consider <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow><mi>w</mi><mo>,</mo><mi>b</mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> fixed and focus on the inside minimization. From <a href="#eq__3_1">(3.3)</a>, it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &ge; </mo><mn>1</mn><mo>-</mo>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo>
    <msup>
     <mrow><mi>b</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, and from <a href="#eq__5">(3.3)</a>, it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &ge; </mo><mn>0</mn>
  </mrow>
 </mrow></math>. If <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo><mn>1</mn>
  </mrow>
 </mrow></math>, the best assignment in <a href="#eq__4">3.4</a> is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo>=</mo><mn>0</mn>
  </mrow>
 </mrow></math> because it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &ge; </mo><mn>0</mn>
  </mrow>
 </mrow></math> from <a href="#eq__5">(3.3)</a> and I need to minimize <a href="#eq__4">(3.4)</a> wrt m\xi . If <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &le; </mo><mn>1</mn>
  </mrow>
 </mrow></math>, the best assignment in <a href="#eq__4">(3.4)</a> is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo>=</mo><mn>1</mn><mo>-</mo>
   <msub>
    <mrow><mi>y</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> because I need to minimize w.r.t <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &xi; </mi>
 </mrow></math>. Hence <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo>=</mo><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo>
    <msub>
     <mrow><mi>y</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo> &rang; </mo><mo>+</mo><mi>b</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>.</div>
</div>
</div>

<div class="standard" id='magicparlabel-129'><br />

</div>

<div class="note" id='magicparlabel-130'><div class="note_item"><span class="note_label">Note 25.</span>
Hence the Soft-SVM is a binary classification problem with hinge loss function and regularization term biasing toward low norm separators. </div>
</div>

<div class="standard" id='magicparlabel-131'><br />

</div>

<div class="note" id='magicparlabel-132'><div class="note_item"><span class="note_label">Note 26.</span>
Given Proposition <a href="#prop_Consider_the_hinge">24</a>, Soft-SVM in Algorithm <a href="#alg__Hard_SVM__Given_a_1">22</a> can be learned via any variation of SGD, eg online SGD (batch size <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>m</mi><mo>=</mo><mn>1</mn>
  </mrow>
 </mrow></math>) with recursion<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi> &piv; </mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>t</mi><mo>+</mo><mn>1</mn>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>=</mo>
   <msup>
    <mrow><mi> &piv; </mi>
    </mrow>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </msup><mo>-</mo>
   <msub>
    <mrow><mi> &eta; </mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>v</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>v</mi>
    </mrow>
    <mrow><mi>t</mi>
    </mrow>
   </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
   <mtable>
    <mtr>
     <mtd>
      <mrow>
       <msup>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo> &lang; </mo>
       <msup>
        <mrow><mi> &piv; </mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo>,</mo>
       <msup>
        <mrow><mi> &chi; </mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo> &rang; </mo>
      </mrow>
     </mtd>
     <mtd>
      <mrow>
       <mstyle mathvariant='normal'>
        <mrow><mi>i</mi><mi>f</mi>
        </mrow>
       </mstyle><mspace width="6px" />
       <msup>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo> &lang; </mo><mi> &piv; </mi><mo>,</mo>
       <msup>
        <mrow><mi> &chi; </mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup><mo> &rang; </mo><mo> &ge; </mo><mn>1</mn>
      </mrow>
     </mtd>
    </mtr>
    <mtr>
     <mtd>
      <mrow><mo>-</mo>
       <msup>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
       <msup>
        <mrow><mi> &chi; </mi>
        </mrow>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
       </msup>
      </mrow>
     </mtd>
     <mtd>
      <mstyle mathvariant='normal'>
       <mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi>
       </mrow>
      </mstyle>
     </mtd>
    </mtr>
   </mtable>
  </mrow>
 </mrow></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &piv; </mi><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msup>
       <mrow><mi>b</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup><mo>,</mo>
      <msup>
       <mrow><mi>w</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &chi; </mi><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mn>1</mn><mo>,</mo>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>t</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>. </div>
</div>
<h2 class="section" id='magicparlabel-138'><span class="section_label">A</span> Recall</h2>
<div class="standard" id='magicparlabel-139'>The following is part of &ldquo; Handout 1: Elements of convex learning problems&rdquo;</div>

<div class="definition" id='magicparlabel-140'><div class="definition_item"><span class="definition_label">Definition 27.</span>
Convex learning problem is a learning problem <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle><mo>,</mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle><mo>,</mo><mi> &ell; </mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> that the hypothesis class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>H</mi>
  </mstyle>
 </mrow></math> is a convex set, and the loss function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &ell; </mi>
 </mrow></math> is a convex function for each example <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>z</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle>
  </mrow>
 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-141'><br />

</div>

<div class="definition" id='magicparlabel-142'><div class="definition_item"><span class="definition_label">Definition 28.</span>
Convex-Lipschitz-Bounded Learning Problem <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle><mo>,</mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle><mo>,</mo><mi> &ell; </mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> with parameters <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &rho; </mi>
 </mrow></math>, and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>B</mi>
 </mrow></math>, is called the learning problem whose the hypothesis class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>H</mi>
  </mstyle>
 </mrow></math> is a convex set, for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle>
  </mrow>
 </mrow></math> it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo> &le; </mo><mi>B</mi>
  </mrow>
 </mrow></math>, and the loss function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &sdot; </mo><mo>,</mo><mi>z</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is convex and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &rho; </mi>
 </mrow></math>-Lischitz function for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>z</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle>
  </mrow>
 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-143'><br />

</div>

<div class="definition" id='magicparlabel-144'><div class="definition_item"><span class="definition_label">Definition 29.</span>
Convex-Smooth-Bounded Learning Problem <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

  <mrow>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle><mo>,</mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle><mo>,</mo><mi> &ell; </mi>
  </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

 </mrow></math> with parameters <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &beta; </mi>
 </mrow></math>, and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>B</mi>
 </mrow></math>, is called the learning problem whose the hypothesis class <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>H</mi>
  </mstyle>
 </mrow></math> is a convex set, for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle>
  </mrow>
 </mrow></math> it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo> &le; </mo><mi>B</mi>
  </mrow>
 </mrow></math>, and the loss function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &sdot; </mo><mo>,</mo><mi>z</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is convex, nonnegative, and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &beta; </mi>
 </mrow></math>-smooth function for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>z</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>Z</mi>
   </mstyle>
  </mrow>
 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-145'><br />

</div>
</body>
</html>
