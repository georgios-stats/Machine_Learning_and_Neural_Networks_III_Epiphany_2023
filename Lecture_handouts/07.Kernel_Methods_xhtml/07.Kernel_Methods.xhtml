<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.3.6.1" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>LyX Document</title>
<style type='text/css'>
/* LyX Provided Styles */
mstyle.math { font-style: italic; }

/* Layout-provided Styles */
del.strikeout {
  text-decoration: line-through;
}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
h3.subsection_ {
font-weight: bold;
font-size: medium;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h2.section {
font-weight: normal;
font-style: normal;
font-variant: small-caps;
font-size: medium;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.theorem {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.theorem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.note {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.note_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.summary {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.summary_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.definition {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.definition_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.lemma {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.lemma_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.problem {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.problem_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.example {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.example_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.proof {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.proof_label {
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.solution_ {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.solution__label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
div.claim {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.claim_label {
font-weight: normal;
font-style: italic;
font-variant: normal;
font-size: medium;

}
div.proposition {
font-style: italic;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.proposition_label {
font-weight: bold;
font-style: normal;
font-variant: normal;
font-size: medium;

}
ol.lyxlist {
	list-style-type: none;
}
li.labeling_item {
	text-indent: -5em;
	margin-left: 5em;
}
span.lyxlist {
	margin-right: 1em;
}
div.Shadowbox { border: solid gray medium; border-bottom: solid black 1ex; border-right: solid black 1ex; padding: 0.5ex; }
div.float {
	border: 2px solid black;
	text-align: center;
}
div.float-caption {
	text-align: center;
	border: 2px solid black;
	padding: 1ex;
	margin: 1ex;
}
div.marginal {
	border: 2px solid black;
	padding: 1ex;
	margin: 1ex;
	background-color: #F0F0F0;
	float:right;
	font-size: small;
	font-weight: medium;
	font-family: serif;
	font-variant: normal;
	font-style: normal;
}


</style>
</head>
<body dir="auto">


<div class="standard" id='magicparlabel-1'><div class='Shadowbox'><div class="plain_layout" id='magicparlabel-10'>Machine Learning and Neural Networks (MATH3431)&nbsp;&nbsp;Epiphany term, 2023<div style='height:3ex'></div></div>

<div class="plain_layout" style='text-align: center;' id='magicparlabel-11'> Handout 7: Kernel methods regression<div style='height:3ex'></div></div>

<div class="plain_layout" id='magicparlabel-28'>Lecturer &amp; author: Georgios P. Karagiannis <a href="georgios.karagiannis@durham.ac.uk">georgios.karagiannis@durham.ac.uk</a></div>

<div class="plain_layout" id='magicparlabel-29'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-30'>Aim</h3>
<div class="plain_layout" id='magicparlabel-31'>To introduce the ideas of learning machines by introducing data into high-dimensional feature spaces for accuracy gains; introduce the kernel trick, and kernel functions.</div>

<div class="plain_layout" id='magicparlabel-32'><hr />

<div style='height:3ex'></div></div>
<h3 class="subsection_" id='magicparlabel-33'>Reading list &amp; references:</h3>

<ol class="enumerate" id='magicparlabel-34'><li class="enumerate_item"><a id="enu_Shalev_Shwartz__S____" />
Shalev-Shwartz, S., &amp; Ben-David, S. (2014). Understanding machine learning: From theory to algorithms. Cambridge university press. 

<ul class="itemize" id='magicparlabel-35'><li class="itemize_item">Ch. 16.2 Support Vector Machine</li>
</ul>
</li><li class="enumerate_item">Bishop, C. M. (2006). Pattern recognition and machine learning (Vol. 4, No. 4, p. 738). New York: Springer.

<ul class="itemize" id='magicparlabel-50'><li class="itemize_item">Ch. 6.1, 6.2 Kernel methods </li>
</ul>
</li></ol>
</div></div>
<h2 class="section" id='magicparlabel-51'><span class="section_label">1</span> Intro and motivation</h2>

<div class="note" id='magicparlabel-56'><div class="note_item"><span class="note_label">Note 1.</span>
Consider the Soft SVM with predictive rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mstyle mathvariant='normal'>
    <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
    </mrow>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi> &eta; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> with separator <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &eta; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo>+</mo>
   <msub>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo>+</mo><mi>b</mi><mo>=</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi>x</mi><mo> &rang; </mo><mo>+</mo><mi>b</mi>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>. It can address learning problems where the data can (up to some degree of violation) be separates by a line (Figure <a href="#fig_Linearly_separable_data">a</a>). In more challenging cases where the geometry is strongly non-linear this can totally fail (Figure <a href="#fig_Non_linearly_separable_data_1">b</a>). 
<div class='float-figure'><div class='float-figure'><div class="plain_layout" id='magicparlabel-64'><img style='width:33%;' src='0_extra_tmp_mffk55_Dropbox_Teaching_2023_term2_____Handouts_figures_07_Kernel_Methods_index-0.png' alt='image: 0_extra_tmp_mffk55_Dropbox_Teaching_2023_term2_____Handouts_figures_07_Kernel_Methods_index-0.png' />
<span class='float-caption-Standard float-caption float-caption-standard'>Sub-Figure a:  <a id="fig_Linearly_separable_data" />
Linearly separable data set, with linear separator</span></div>
</div>
<div class='float-figure'><div class="plain_layout" id='magicparlabel-72'><img style='width:33%;' src='1_extra_tmp_mffk55_Dropbox_Teaching_2023_term2_____Handouts_figures_07_Kernel_Methods_index-1.png' alt='image: 1_extra_tmp_mffk55_Dropbox_Teaching_2023_term2_____Handouts_figures_07_Kernel_Methods_index-1.png' />
<span class='float-caption-Standard float-caption float-caption-standard'>Sub-Figure b:  <a id="fig_Non_linearly_separable_data_1" />
Non-linearly separable data set, with linear separator</span></div>
</div>
<div class='float-figure'><div class="plain_layout" id='magicparlabel-80'><img style='width:33%;' src='2_extra_tmp_mffk55_Dropbox_Teaching_2023_term2_____Handouts_figures_07_Kernel_Methods_index-2.png' alt='image: 2_extra_tmp_mffk55_Dropbox_Teaching_2023_term2_____Handouts_figures_07_Kernel_Methods_index-2.png' />
<span class='float-caption-Standard float-caption float-caption-standard'>Sub-Figure c:  <a id="fig_Non_linearly_separable_data" />
Non-linearly separable data set, with quadratic separator</span></div>
</div>


<div class="plain_layout" id='magicparlabel-85'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 1.1:  Soft SVM from Computer practical 4</span></div>
</div>
</div>
</div>

<div class="standard" id='magicparlabel-90'><br />

</div>

<div class="note" id='magicparlabel-91'><div class="note_item"><span class="note_label">Note 2.</span>
The accuracy of predictive rule can be improved if I take into account the curvature by adding a quadratic term in the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mn>2</mn>
 </mrow></math>nd dimension as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &eta; </mi><mo>'</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>w</mi>
   <msub>
    <mrow><mo>'</mo>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo>+</mo><mi>w</mi>
   <msub>
    <mrow><mo>'</mo>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo>+</mo><mi>w</mi>
   <msub>
    <mrow><mo>'</mo>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>3</mn>
    </mrow>
   </msub><mo>+</mo><mi>b</mi><mo>=</mo><mo> &lang; </mo><mi>w</mi><mo>'</mo><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>+</mo><mi>b</mi>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub><mo>,</mo>
    <msubsup>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msubsup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> and learning the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo>'</mo>
  </mrow>
 </mrow></math> . It works, (Figure <a href="#fig_Non_linearly_separable_data">c</a>).</div>
</div>

<div class="standard" id='magicparlabel-92'><br />

</div>

<div class="note" id='magicparlabel-93'><div class="note_item"><span class="note_label">Note 3.</span>
Consequently, in order to improve the expressiveness of a hypothesis class 
<span style = "text-align: center;"><img src="lyxpreviewmYeHGI1.png" alt="Mathematical Equation" />
</span>
 (for some function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math>) with purpose to learn a more accurate predictive rule, it is reasonable to consider an embedding <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, which can possibly be a vector of bases functions such as polynomials, splines, etc..., and work on the learning problem with 
<span style = "text-align: center;"><img src="lyxpreviewLFdVsD1.png" alt="Mathematical Equation" />
</span>
.</div>
</div>

<div class="standard" id='magicparlabel-94'><br />

</div>

<div class="note" id='magicparlabel-95'><div class="note_item"><span class="note_label">Note 4.</span>
The above may drastically increase the dimensionality of the problem hence the computational cost and required number of example to train. This challenge is addressed by the Kernel trick.</div>
</div>

<div class="standard" id='magicparlabel-96'><br />

</div>

<div class="note" id='magicparlabel-97'><div class="note_item"><span class="note_label">Note 5.</span>
In general, kernel trick allows the design of powerful and cheap extensions of many well known algorithms.</div>
</div>
<h2 class="section" id='magicparlabel-102'><span class="section_label">2</span> Projections in feature spaces (Improving expressive power)</h2>

<div class="note" id='magicparlabel-110'><div class="note_item"><span class="note_label">Note 6.</span>
To make the class of hypotheses more expressive with purpose to improve accuracy, we can first map the original instance space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math> into another space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math> (possibly of a higher dimension) via an embedding <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> and then learn a hypothesis in that space.</div>
</div>

<div class="standard" id='magicparlabel-111'><br />

</div>


<div class="standard" id='magicparlabel-112'><br />

</div>

<div class="summary" id='magicparlabel-113'><div class="summary_item"><span class="summary_label">Summary 7.</span>
<a id="sum_The_basic_paradigm" />
 Consider a hypothesis class 
<span style = "text-align: center;"><img src="lyxpreviewZFUDaK1.png" alt="Mathematical Equation" />
</span>
 where the predictive rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>H</mi>
   </mstyle>
  </mrow>
 </mrow></math> defined over <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>X</mi>
  </mstyle>
 </mrow></math> is to be trained against data set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>S</mi>
   </mstyle><mo>=</mo>
   <msubsup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

     <mrow>
      <msub>
       <mrow><mi>z</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow>
       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mo>,</mo>
       <msub>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
  </mrow>
 </mrow></math> . The basic paradigm involves:</div>

<ol class="enumerate" id='magicparlabel-114'><li class="enumerate_item">Choose a mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='script'><mi>F</mi>
   </mstyle>
  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi> &psi; </mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mn>...</mn><mo>,</mo>
    <msub>
     <mrow><mi> &psi; </mi>
     </mrow>
     <mrow><mi>d</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> for some feature space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math>. </li>
<li class="enumerate_item">Create the image sequence <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mover>
    <mrow>
     <mstyle mathvariant='script'><mi>S</mi>
     </mstyle>
    </mrow><mo stretchy="true">&tilde;</mo>
   </mover><mo>=</mo>
   <msubsup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

     <mrow>
      <msubsup>
       <mrow><mi>z</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
       <mrow><mi> &psi; </mi>
       </mrow>
      </msubsup><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
       <msub>
        <mrow><mi>y</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
  </mrow>
 </mrow></math> from the original training set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>S</mi>
  </mstyle>
 </mrow></math>. </li>
<li class="enumerate_item">Train a linear predictor <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>h</mi>
 </mrow></math> against <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mover>
   <mrow>
    <mstyle mathvariant='script'><mi>S</mi>
    </mstyle>
   </mrow><mo stretchy="true">&tilde;</mo>
  </mover>
 </mrow></math>.</li>
<li class="enumerate_item">Predict the label or the output of a new point <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>x</mi>
   </mrow>
   <mrow>
    <mstyle mathvariant='normal'>
     <mrow><mi>n</mi><mi>e</mi><mi>w</mi>
     </mrow>
    </mstyle>
   </mrow>
  </msup>
 </mrow></math> by <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mi> &psi; </mi>
    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow><mi>x</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>n</mi><mi>e</mi><mi>w</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo>=</mo><mi>h</mi><mo> &cir; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msup>
    <mrow><mi>x</mi>
    </mrow>
    <mrow>
     <mstyle mathvariant='normal'>
      <mrow><mi>n</mi><mi>e</mi><mi>w</mi>
      </mrow>
     </mstyle>
    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <msup>
     <mrow><mi>x</mi>
     </mrow>
     <mrow>
      <mstyle mathvariant='normal'>
       <mrow><mi>n</mi><mi>e</mi><mi>w</mi>
       </mrow>
      </mstyle>
     </mrow>
    </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></li>
</ol>
</div>

<div class="standard" id='magicparlabel-118'><br />

</div>


<div class="standard" id='magicparlabel-119'><br />

</div>

<div class="note" id='magicparlabel-120'><div class="note_item"><span class="note_label">Note 8.</span>
The introduction of mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='script'><mi>F</mi>
   </mstyle>
  </mrow>
 </mrow></math> induces </div>

<ol class="enumerate" id='magicparlabel-121'><li class="enumerate_item">probability distribution <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>G</mi>
   </mrow>
   <mrow><mi> &psi; </mi>
   </mrow>
  </msup>
 </mrow></math> over domain <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>F</mi>
   </mstyle>
  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>G</mi>
    </mrow>
    <mrow><mi> &psi; </mi>
    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>A</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>G</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msup>
     <mrow><mi> &psi; </mi>
     </mrow>
     <mrow>
      <mrow><mo>-</mo><mn>1</mn>
      </mrow>
     </mrow>
    </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>A</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> for every set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>A</mi><mo> &sube; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>F</mi>
   </mstyle>
  </mrow>
 </mrow></math>. </li>
<li class="enumerate_item">predictive rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mi> &psi; </mi>
    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo>=</mo><mi>h</mi><mo> &cir; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo> &cir; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></li>
<li class="enumerate_item">risk function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>R</mi>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi>G</mi>
      </mrow>
      <mrow><mi> &psi; </mi>
      </mrow>
     </msup>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>h</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo>=</mo>
   <msub>
    <mrow><mi>R</mi>
    </mrow>
    <mrow><mi>G</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo> &cir; </mo><mi> &psi; </mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, as <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>R</mi>
    </mrow>
    <mrow><mi>G</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo> &cir; </mo><mi> &psi; </mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &int; </mo><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo> &cir; </mo><mi> &psi; </mi><mo>,</mo><mi>z</mi><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   <mstyle mathvariant='normal'><mi>d</mi>
   </mstyle><mi>G</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>z</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &int; </mo><mi> &ell; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>h</mi><mo>,</mo>
    <msup>
     <mrow><mi>z</mi>
     </mrow>
     <mrow><mi> &psi; </mi>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   <mstyle mathvariant='normal'><mi>d</mi>
   </mstyle>
   <msup>
    <mrow><mi>G</mi>
    </mrow>
    <mrow><mi> &psi; </mi>
    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>y</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>R</mi>
    </mrow>
    <mrow>
     <msup>
      <mrow><mi>G</mi>
      </mrow>
      <mrow><mi> &psi; </mi>
      </mrow>
     </msup>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>h</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></li>
</ol>
</div>

<div class="standard" id='magicparlabel-124'><br />

</div>


<div class="standard" id='magicparlabel-125'><br />

</div>

<div class="definition" id='magicparlabel-126'><div class="definition_item"><span class="definition_label">Definition 9.</span>
A Hilbert space is a vector space, with an inner product, which is also complete.</div>
</div>

<div class="lemma" id='magicparlabel-135'><div class="lemma_item"><span class="lemma_label">Lemma 10.</span>
<a id="lem_If__is" />
If <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>X</mi>
  </mstyle>
 </mrow></math> is a linear subspace of a Hilbert space, then every <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math> can be written as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo>=</mo><mi>u</mi><mo>+</mo><mi>v</mi>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>u</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &lang; </mo><mi>u</mi><mo>,</mo><mi>v</mi><mo> &rang; </mo><mo>=</mo><mn>0</mn>
  </mrow>
 </mrow></math> for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>v</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math>.</div>
</div>

<div class="standard" id='magicparlabel-136'><br />

</div>

<div class="note" id='magicparlabel-137'><div class="note_item"><span class="note_label">Note 11.</span>
Feature space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math> is a Hilbert space preferably due to Lemma <a href="#lem_If__is">10</a> that enables the Kernel trick via the representation Theorem <a href="#thm__Representation_theorem__Assume">21</a>. Eg, a Euclidean space such as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='double-struck'><mi>R</mi>
    </mstyle>
   </mrow>
   <mrow><mi>d</mi>
   </mrow>
  </msup>
 </mrow></math> for some <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>d</mi>
 </mrow></math>. That includes infinite dimensional spaces. </div>
</div>

<div class="standard" id='magicparlabel-138'><br />

</div>

<div class="note" id='magicparlabel-139'><div class="note_item"><span class="note_label">Note 12.</span>
As feature mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> any function that maps the original instances <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>X</mi>
  </mstyle>
 </mrow></math> into some Hilbert space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math> can be used. </div>
</div>

<div class="standard" id='magicparlabel-140'><br />

</div>

<div class="note" id='magicparlabel-141'><div class="note_item"><span class="note_label">Note 13.</span>
The success of the learning paradigm in Summary <a href="#sum_The_basic_paradigm">7</a> depends on choosing a good embedding <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> for the particular learning task. Eg, in SVM, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> will make the image of the data distribution (close to being) linearly separable in the feature space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math>, thus making the resulting learning algorithm a good learner for a given task (Figure <a href="#fig_Projection_of_the">2.1</a>). This requires prior knowledge of the problem (In Section <a href="#sec_Construction_of_kernels">4</a>, we see popular recipes for that).  <div class='float-figure'><div class="plain_layout" id='magicparlabel-149'><span class='float-caption-Standard float-caption float-caption-standard'>Figure 2.1:  <a id="fig_Projection_of_the" />
Projection of the inputs living in the original space to the feature space</span></div>
<div class='float-figure'><div class="plain_layout" id='magicparlabel-153'><img style='width:33%;' src='3_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____gures_07_Kernel_Methods_original-space-data.png' alt='image: 3_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____gures_07_Kernel_Methods_original-space-data.png' />
<span class='float-caption-Standard float-caption float-caption-standard'>Sub-Figure a:  <a id="fig_Non_linearly_separable_data_2" />
Inputs in the original space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mspace width="6px" />
   <mstyle mathvariant='normal'>
    <mrow><mi>v</mi><mi>s</mi>
    </mrow>
   </mstyle><mspace width="6px" />
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub>
  </mrow>
 </mrow></math></span></div>
</div>
<div class='float-figure'><div class="plain_layout" id='magicparlabel-161'><img style='width:33%;' src='4_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____figures_07_Kernel_Methods_feture-space-data.png' alt='image: 4_extra_tmp_mffk55_Dropbox_Teaching_2023_term2____figures_07_Kernel_Methods_feture-space-data.png' />
<span class='float-caption-Standard float-caption float-caption-standard'>Sub-Figure b:  <a id="fig_Non_linearly_separable_data_2_1" />
Projection of inputs tot he feature space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &psi; </mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mspace width="6px" />
   <mstyle mathvariant='normal'>
    <mrow><mi>v</mi><mi>s</mi>
    </mrow>
   </mstyle><mspace width="6px" />
   <msub>
    <mrow><mi> &psi; </mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mn>4</mn>
   <msubsup>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msubsup><mo>+</mo><mn>1</mn>
  </mrow>
 </mrow></math></span></div>
</div>



</div>
</div>
</div>

<div class="standard" id='magicparlabel-171'><br />

</div>

<div class="note" id='magicparlabel-172'><div class="note_item"><span class="note_label">Note 14.</span>
Using a <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>:</mo><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi> &psi; </mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mn>...</mn><mo>,</mo>
    <msub>
     <mrow><mi> &psi; </mi>
     </mrow>
     <mrow><mi>d</mi>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> that is high dimensional (<math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>d</mi>
 </mrow></math> is too large) may improve accuracy (expressiveness) of the learner (e.g. recall in polynomial regression increasing the polynomial degree). However this increases the computational effort/cost required to perform calculations to minimize the associated risk function in the high dimensional space, as well as we need more data. This is addressed via the Kernel trick. </div>
</div>

<div class="standard" id='magicparlabel-173'><br />

</div>

<div class="note" id='magicparlabel-174'><div class="note_item"><span class="note_label">Note 15.</span>
Recall the feed forward neural network (let's say with 1 hidden layer) formula mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>x</mi>
 </mrow></math> to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>:<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi> &sigma; </mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msubsup>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow>
      <mrow><mi>j</mi><mo>=</mo>
      </mrow>
     </mrow>
     <mrow><mi>c</mi>
     </mrow>
    </msubsup>
    <msub>
     <mrow><mi>w</mi>
     </mrow>
     <mrow>
      <mrow><mn>2</mn><mo>,</mo><mn>1</mn><mo>,</mo><mi>j</mi>
      </mrow>
     </mrow>
    </msub>
    <msub>
     <mrow><mi> &sigma; </mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi>n</mi>
      </mrow>
     </msubsup>
     <msub>
      <mrow><mi>w</mi>
      </mrow>
      <mrow>
       <mrow><mn>1</mn><mo>,</mo><mi>j</mi><mo>,</mo><mi>i</mi>
       </mrow>
      </mrow>
     </msub>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mn>.</mn>
  </mrow>
 </mrow></math> It can be considered as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi> &sigma; </mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <msub>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> with where the output of the hidden layer is the embeding <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi> &sigma; </mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi>n</mi>
      </mrow>
     </msubsup>
     <msub>
      <mrow><mi>w</mi>
      </mrow>
      <mrow>
       <mrow><mn>1</mn><mo>,</mo><mn>1</mn><mo>,</mo><mi>i</mi>
       </mrow>
      </mrow>
     </msub>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mn>...</mn><mo>,</mo>
    <msub>
     <mrow><mi> &sigma; </mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
       </mrow>
      </mrow>
      <mrow><mi>n</mi>
      </mrow>
     </msubsup>
     <msub>
      <mrow><mi>w</mi>
      </mrow>
      <mrow>
       <mrow><mn>1</mn><mo>,</mo><mi>c</mi><mo>,</mo><mi>i</mi>
       </mrow>
      </mrow>
     </msub>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. Interestingly, FFNN, can be considered as providing an adaptive (semi-parametric) <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> as the weights <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi>w</mi>
   </mrow>
   <mrow>
    <mrow><mn>1</mn><mo>,</mo><mi>j</mi><mo>,</mo><mi>i</mi>
    </mrow>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> are adapted during the training. Hence, FFNN performs a deformation of the input space in the same spirit to the projections in feature spaces method. Adding more hidden layers (multi-perceptron) potentially can improve this. </div>
</div>
<h2 class="section" id='magicparlabel-175'><span class="section_label">3</span> The Kernel trick</h2>

<div class="standard" id='magicparlabel-176'><br />

</div>

<div class="definition" id='magicparlabel-177'><div class="definition_item"><span class="definition_label">Definition 16.</span>
Kernel function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>K</mi>
 </mrow></math> is defined as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math> given an embedding <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> of some domain space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>X</mi>
  </mstyle>
 </mrow></math> into some Hilbert space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math>. Kernel functions describe inner products in the feature space <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math>. </div>
</div>

<div class="standard" id='magicparlabel-178'><br />

</div>

<div class="note" id='magicparlabel-179'><div class="note_item"><span class="note_label">Note 17.</span>
Kernel function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>K</mi>
 </mrow></math> can be considered as specifying similarity between instances via the embedding <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> as mapping the domain set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>X</mi>
  </mstyle>
 </mrow></math> into a space where these similarities are realized as inner products.</div>
</div>

<div class="standard" id='magicparlabel-180'><br />

</div>

<div class="problem" id='magicparlabel-181'><div class="problem_item"><span class="problem_label">Problem 18.</span>
<a id="prob_Consider_the_following" />
 (Learning problem) Consider a prediction rule <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='script'><mi>Y</mi>
   </mstyle>
  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math> which is trained against a training sample <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msubsup>
   <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

    <mrow>
     <msub>
      <mrow><mi>z</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>y</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

   </mrow>
   <mrow>
    <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
    </mrow>
   </mrow>
   <mrow><mi>m</mi>
   </mrow>
  </msubsup>
 </mrow></math> with the following general optimization problem<a id="eq_" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><munder accent='false'>
    <mstyle mathvariant='normal'>
     <mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi>
     </mrow>
    </mstyle><mi>w</mi></munder>
   </mtd>
   <mtd>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mspace width="6px" /><mspace width="6px" /><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mn>1</mn>
        </mrow>
       </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>,</mo><mn>...</mn><mo>,</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mi>m</mi>
        </mrow>
       </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mspace width="6px" /><mo>+</mo><mspace width="6px" /><mi>R</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mspace width="6px" /><mspace width="6px" />
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
    </mrow>
   </mtd>
   <mtd>(3.1)
   </mtd>
  </mtr>
 </mtable></math>where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo>:</mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msup><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> is an arbitrary function and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>R</mi><mo>:</mo>
   <msub>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mo>+</mo>
    </mrow>
   </msub><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> is a monotonically non-decreasing function.</div>
</div>

<div class="standard" id='magicparlabel-182'><br />

</div>

<div class="example" id='magicparlabel-183'><div class="example_item"><span class="example_label">Example 19.</span>
In Soft SVM (Proposition <a href="#prop_Consider_the_hinge">prop:Consider-the-hinge</a>, Handout 6), it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>a</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo>,</mo><mn>...</mn><mo>,</mo>
    <msub>
     <mrow><mi>a</mi>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow><mn>1</mn>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </mfrac>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo>
    <msub>
     <mrow><mi>y</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
    <msub>
     <mrow><mi>a</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>R</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>a</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi> &lambda; </mi>
   <msup>
    <mrow><mi>a</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>.</div>
</div>

<div class="standard" id='magicparlabel-184'><br />

</div>

<div class="note" id='magicparlabel-185'><div class="note_item"><span class="note_label">Note 20.</span>
The following result states a duality in the learning problem <a href="#prob_Consider_the_following">18</a> that facilitates the implementation of the extension to a possibly high dimensional feature space (hence improving the expressiveness/accuracy) by using kernel functions (hence reducing dimensionlality, computational cost, and required data size). </div>
</div>

<div class="standard" id='magicparlabel-186'><br />

</div>

<div class="theorem" id='magicparlabel-187'><div class="theorem_item"><span class="theorem_label">Theorem 21.</span>
<a id="thm__Representation_theorem__Assume" />
(Representation theorem) Assume mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='script'><mi>F</mi>
   </mstyle>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mstyle mathvariant='script'><mi>F</mi>
  </mstyle>
 </mrow></math> is a Hilbert space. There exists a vector <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &alpha; </mi><mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> such that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is the optimal solution of <a href="#eq_">(3.1)</a> in Problem <a href="#prob_Consider_the_following">18</a>. </div>

<div class="proof" id='magicparlabel-188'><div class="proof_item"><span class="proof_label">Proof.</span>
Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msup>
 </mrow></math> be the optimal solution of <a href="#eq_">(3.1)</a>. Because <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msup>
 </mrow></math> is element of Hilbert space, it can be written as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo><mi>u</mi>
  </mrow>
 </mrow></math> where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &lang; </mo><mi>u</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo><mn>0</mn>
  </mrow>
 </mrow></math> for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
  </mrow>
 </mrow></math>. Set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo>:</mo><mo>=</mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo>-</mo><mi>u</mi>
  </mrow>
 </mrow></math>. </div>
<div class="proof_item">Because <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     <msup>
      <mrow><mi>w</mi>
      </mrow>
      <mrow><mo>*</mo>
      </mrow>
     </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msup><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msup><mo>+</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>u</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mo> &le; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

  </mrow>
 </mrow></math> implying that <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>R</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &le; </mo><mi>R</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mn>.</mn>
  </mrow>
 </mrow></math>Because <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo><mo> &lang; </mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo>-</mo><mi>u</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo><mo> &lang; </mo>
   <msup>
    <mrow><mi>w</mi>
    </mrow>
    <mrow><mo>*</mo>
    </mrow>
   </msup><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math> for all <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>m</mi>
  </mrow>
 </mrow></math>, it is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>,</mo><mn>...</mn><mo>,</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &lang; </mo>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>,</mo><mn>...</mn><mo>,</mo><mo> &lang; </mo>
    <msup>
     <mrow><mi>w</mi>
     </mrow>
     <mrow><mo>*</mo>
     </mrow>
    </msup><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> Then the objective function of <a href="#eq_">(3.1)</a> at <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>w</mi>
 </mrow></math> is less than or equal to that of the minimizer <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow><mi>w</mi>
   </mrow>
   <mrow><mo>*</mo>
   </mrow>
  </msup>
 </mrow></math> which implies that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is an optimal solution. </div>
</div>
</div>

<div class="standard" id='magicparlabel-199'><br />

</div>

<div class="note" id='magicparlabel-200'><div class="note_item"><span class="note_label">Note 22.</span>
<a id="note_Let__be" />
Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> be a kernel function with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math>. According to the representation Theorem <a href="#thm__Representation_theorem__Assume">21</a>, the Learning problem <a href="#prob_Consider_the_following">18</a>, can be equivalently addressed by re-writing the learning predictive rule as<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>h</mi>
    </mrow>
    <mrow><mi> &alpha; </mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>,</mo><mi>x</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> and learning <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

  <msub>
   <mrow><mi> &alpha; </mi>
   </mrow>
   <mrow><mi>i</mi>
   </mrow>
  </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

 </mrow></math> as the solutions of <a id="eq__1" />
<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd><munder accent='false'>
    <mstyle mathvariant='normal'>
     <mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi>
     </mrow>
    </mstyle><mi> &alpha; </mi></munder>
   </mtd>
   <mtd>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mspace width="6px" /><mspace width="6px" /><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow>
       <msubsup>
        <mrow><mo> &sum; </mo>
        </mrow>
        <mrow>
         <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
         </mrow>
        </mrow>
        <mrow><mi>m</mi>
        </mrow>
       </msubsup>
       <msub>
        <mrow><mi> &alpha; </mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub><mo>,</mo><mi>x</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mn>...</mn><mo>,</mo>
       <msubsup>
        <mrow><mo> &sum; </mo>
        </mrow>
        <mrow>
         <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
         </mrow>
        </mrow>
        <mrow><mi>m</mi>
        </mrow>
       </msubsup>
       <msub>
        <mrow><mi> &alpha; </mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mi>m</mi>
         </mrow>
        </msub><mo>,</mo><mi>x</mi>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mspace width="6px" /><mo>+</mo><mspace width="6px" /><mi>R</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <msqrt>
       <mrow>
        <msubsup>
         <mrow><mo> &sum; </mo>
         </mrow>
         <mrow>
          <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
          </mrow>
         </mrow>
         <mrow><mi>m</mi>
         </mrow>
        </msubsup>
        <msubsup>
         <mrow><mo> &sum; </mo>
         </mrow>
         <mrow>
          <mrow><mi>j</mi><mo>=</mo><mn>1</mn>
          </mrow>
         </mrow>
         <mrow><mi>m</mi>
         </mrow>
        </msubsup>
        <msub>
         <mrow><mi> &alpha; </mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub>
        <msub>
         <mrow><mi> &alpha; </mi>
         </mrow>
         <mrow><mi>j</mi>
         </mrow>
        </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mi>i</mi>
          </mrow>
         </msub><mo>,</mo>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mi>j</mi>
          </mrow>
         </msub>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
      </msqrt>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mspace width="6px" /><mspace width="6px" />
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
    </mrow>
   </mtd>
   <mtd>(3.2)
   </mtd>
  </mtr>
 </mtable></math> This is because <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo><mo> &lang; </mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>and<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>
<mi>w</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msup><mo>=</mo><mo> &lang; </mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>j</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>j</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msubsup>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow>
     <mrow><mi>j</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>m</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math></div>
</div>

<div class="example" id='magicparlabel-201'><div class="example_item"><span class="example_label">Example 23.</span>
In Soft SVM (Proposition <a href="#prop_Consider_the_hinge">prop:Consider-the-hinge</a>, Handout 6), we can have<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><munder accent='false'>
   <mstyle mathvariant='normal'>
    <mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi>
    </mrow>
   </mstyle><mi> &alpha; </mi></munder><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi> &lambda; </mi>
    <msub>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
    <msub>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
    <msub>
     <mrow><mi> &alpha; </mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
    <msub>
     <mrow><mi> &alpha; </mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo>
    <mfrac>
     <mrow><mn>1</mn>
     </mrow>
     <mrow><mi>m</mi>
     </mrow>
    </mfrac>
    <msub>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo> max </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mn>0</mn><mo>,</mo><mn>1</mn><mo>-</mo>
     <msub>
      <mrow><mi>y</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mi> &alpha; </mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>j</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mstyle mathvariant='normal'>
    <mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi>
    </mrow>
   </mstyle><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mo> &sum; </mo>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
    <msub>
     <mrow><mi> &alpha; </mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. It can be minimised via SGD. As we can just directly specify the kernel function without the need to even think about feature mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> (which is eliminated and replaced by the kernel), we can call it Kernel SVM. </div>
</div>

<div class="standard" id='magicparlabel-202'><br />

</div>

<div class="note" id='magicparlabel-203'><div class="note_item"><span class="note_label">Note 24.</span>
In Learning problem <a href="#prob_Consider_the_following">18</a>, direct access to elements <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> in the feature space is not necessary, as equivalently one can calculate or just specify the associated kernel function (that is inner products in the feature space).</div>
</div>

<div class="standard" id='magicparlabel-204'><br />

</div>

<div class="example" id='magicparlabel-205'><div class="example_item"><span class="example_label">Example 25.</span>
(Polynomial Kernels) Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &sube; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </msup><mn>.</mn>
  </mrow>
 </mrow></math> Assume we want to extend the linear mapping 
<span style = "text-align: center;"><img src="lyxpreviewItfWgo1.png" alt="Mathematical Equation" />
</span>
 to the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>k</mi>
 </mrow></math> degree polynomial mapping 
<span style = "text-align: center;"><img src="lyxpreviewSmvtBK1.png" alt="Mathematical Equation" />
</span>
. The multivariate polynomial can be written as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>h</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi>w</mi><mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math>, where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo>:</mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>n</mi>
    </mrow>
   </msup><mo> &rarr; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is a vector of elements <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &psi; </mi>
    </mrow>
    <mrow><mi>J</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msubsup>
    <mrow><mo> &prod; </mo>
    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>=</mo><mn>1</mn>
     </mrow>
    </mrow>
    <mrow><mi>r</mi>
    </mrow>
   </msubsup>
   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow>
     <msub>
      <mrow><mi>J</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
    </mrow>
   </msub>
  </mrow>
 </mrow></math> for <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>J</mi><mo> &isin; </mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

     <mrow><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

    </mrow>
    <mrow><mi>r</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>r</mi><mo> &le; </mo><mi>k</mi>
  </mrow>
 </mrow></math>. This learning problem can be equivalently be addressed with the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>k</mi>
 </mrow></math> degree polynomial kernel<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mn>1</mn><mo>+</mo><mo> &lang; </mo><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo><mo> &rang; </mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi>k</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math></div>

<div class="solution_" id='magicparlabel-210'><div class="solution__item"><span class="solution__label">Solution.</span>
It is<math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow><mn>1</mn><mo>+</mo><mo> &lang; </mo><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo><mo> &rang; </mo>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi>k</mi>
      </mrow>
     </msup><mo>=</mo>
     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msubsup>
         <mrow><mo> &sum; </mo>
         </mrow>
         <mrow>
          <mrow><mi>j</mi><mo>=</mo><mn>0</mn>
          </mrow>
         </mrow>
         <mrow><mi>n</mi>
         </mrow>
        </msubsup>
        <msub>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mi>j</mi>
         </mrow>
        </msub><mi>x</mi>
        <msub>
         <mrow><mo>'</mo>
         </mrow>
         <mrow><mi>j</mi>
         </mrow>
        </msub>
       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi>k</mi>
      </mrow>
     </msup><mspace width="6px" /><mspace width="6px" /><mspace width="6px" /><mspace width="6px" />
     <mstyle mathvariant='normal'><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mi>b</mi><mi>y</mi>&nbsp;<mi>s</mi><mi>e</mi><mi>t</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi>g</mi>&nbsp;
       <mstyle class='math'>
        <mrow>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mn>0</mn>
          </mrow>
         </msub><mo>=</mo>
         <msub>
          <mrow><mi>x</mi>
          </mrow>
          <mrow><mn>0</mn>
          </mrow>
         </msub><mo>'</mo><mo>=</mo><mn>1</mn>
        </mrow>
       </mstyle>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mstyle>
    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>J</mi><mo> &isin; </mo>
        <msup>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

          <mrow><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
          </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

         </mrow>
         <mrow><mi>k</mi>
         </mrow>
        </msup>
       </mrow>
      </mrow>
     </msub>
     <msubsup>
      <mrow><mo> &prod; </mo>
      </mrow>
      <mrow>
       <mrow><mi>i</mi><mo>=</mo><mn>0</mn>
       </mrow>
      </mrow>
      <mrow><mi>n</mi>
      </mrow>
     </msubsup>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow>
       <msub>
        <mrow><mi>J</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
      </mrow>
     </msub><mi>x</mi>
     <msub>
      <mrow><mo>'</mo>
      </mrow>
      <mrow>
       <msub>
        <mrow><mi>J</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
      </mrow>
     </msub><mo>=</mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>J</mi><mo> &isin; </mo>
        <msup>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

          <mrow><mn>1</mn><mo>,</mo><mn>...</mn><mo>,</mo><mi>n</mi>
          </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

         </mrow>
         <mrow><mi>k</mi>
         </mrow>
        </msup>
       </mrow>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msubsup>
       <mrow><mo> &prod; </mo>
       </mrow>
       <mrow>
        <mrow><mi>i</mi><mo>=</mo><mn>0</mn>
        </mrow>
       </mrow>
       <mrow><mi>n</mi>
       </mrow>
      </msubsup>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow>
        <msub>
         <mrow><mi>J</mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msubsup>
       <mrow><mo> &prod; </mo>
       </mrow>
       <mrow>
        <mrow><mi>i</mi><mo>=</mo><mn>0</mn>
        </mrow>
       </mrow>
       <mrow><mi>n</mi>
       </mrow>
      </msubsup><mi>x</mi>
      <msub>
       <mrow><mo>'</mo>
       </mrow>
       <mrow>
        <msub>
         <mrow><mi>J</mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
    </mrow>
   </mtd>
  </mtr>
 </mtable></math>where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is as defined. </div>
</div>
</div>

<div class="standard" id='magicparlabel-211'><br />

</div>

<div class="example" id='magicparlabel-219'><div class="example_item"><span class="example_label">Example 26.</span>
(Radial basis kernel) Let the original input space be <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &sube; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle><mn>.</mn>
  </mrow>
 </mrow></math> Consider the Radial Basis Functions Kernel (or Gaussian kernel) <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo>-</mo>
    <mfrac>
     <mrow><mn>1</mn>
     </mrow>
     <mrow>
      <mrow><mn>2</mn>
       <msup>
        <mrow><mi> &sigma; </mi>
        </mrow>
        <mrow><mn>2</mn>
        </mrow>
       </msup>
      </mrow>
     </mrow>
    </mfrac>
    <msubsup>
     <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

      <mrow><mi>x</mi><mo>-</mo><mi>x</mi><mo>'</mo>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

     </mrow>
     <mrow><mn>2</mn>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msubsup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mn>.</mn>
  </mrow>
 </mrow></math> Show that it is a kernel indeed, by presenting it as an inner product in a feature space of infinite dimension, and state the bases of the mapping <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mo> &sdot; </mo>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>.</div>

<div class="solution_" id='magicparlabel-224'><div class="solution__item"><span class="solution__label">Solution.</span>
It is <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
    </mrow>
   </mtd>
   <mtd>
    <mrow><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <mrow><mn>2</mn>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mn>2</mn>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac>
      <msubsup>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

        <mrow><mi>x</mi><mo>-</mo><mi>x</mi><mo>'</mo>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

       </mrow>
       <mrow><mn>2</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msubsup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <msup>
         <mrow><mi> &sigma; </mi>
         </mrow>
         <mrow><mn>2</mn>
         </mrow>
        </msup>
       </mrow>
      </mfrac><mi>x</mi><mi>x</mi><mo>'</mo><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </mfrac>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msup><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </mfrac>
      <msup>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow><mi>x</mi><mo>'</mo>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mo>=</mo>
   </mtd>
   <mtd>
    <mrow><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <msup>
         <mrow><mi> &sigma; </mi>
         </mrow>
         <mrow><mn>2</mn>
         </mrow>
        </msup>
       </mrow>
      </mfrac><mi>x</mi><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <mrow><mn>2</mn>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mn>2</mn>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <mrow><mn>2</mn>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mn>2</mn>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac>
      <msup>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow><mi>x</mi><mo>'</mo>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mo>=</mo>
   </mtd>
   <mtd>
    <mrow>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>k</mi><mo>=</mo><mn>0</mn>
       </mrow>
      </mrow>
      <mrow><mi> &infin; </mi>
      </mrow>
     </msubsup>
     <mfrac>
      <mrow>
       <msup>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

         <mrow><mi>x</mi><mi>x</mi><mo>'</mo><mo>/</mo>
          <msup>
           <mrow><mi> &sigma; </mi>
           </mrow>
           <mrow><mn>2</mn>
           </mrow>
          </msup>
         </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
        <mrow><mi>k</mi>
        </mrow>
       </msup>
      </mrow>
      <mrow>
       <mrow><mi>k</mi><mo>!</mo>
       </mrow>
      </mrow>
     </mfrac><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <mrow><mn>2</mn>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mn>2</mn>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac>
      <msup>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mo>-</mo>
      <mfrac>
       <mrow><mn>1</mn>
       </mrow>
       <mrow>
        <mrow><mn>2</mn>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mn>2</mn>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac>
      <msup>
       <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow><mi>x</mi><mo>'</mo>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msup>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mo>=</mo>
   </mtd>
   <mtd>
    <mrow>
     <msubsup>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow>
       <mrow><mi>k</mi><mo>=</mo><mn>0</mn>
       </mrow>
      </mrow>
      <mrow><mi> &infin; </mi>
      </mrow>
     </msubsup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

     <mrow>
      <mfrac>
       <mrow>
        <msup>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mi>k</mi>
         </mrow>
        </msup>
       </mrow>
       <mrow>
        <mrow>
         <msqrt>
          <mrow><mi>k</mi><mo>!</mo>
          </mrow>
         </msqrt>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mi>k</mi>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mo>-</mo>
       <mfrac>
        <mrow><mn>1</mn>
        </mrow>
        <mrow>
         <mrow><mn>2</mn>
          <msup>
           <mrow><mi> &sigma; </mi>
           </mrow>
           <mrow><mn>2</mn>
           </mrow>
          </msup>
         </mrow>
        </mrow>
       </mfrac>
       <msup>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mn>2</mn>
        </mrow>
       </msup>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>
<mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>

     <mrow>
      <mfrac>
       <mrow>
        <msup>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

          <mrow><mi>x</mi><mo>'</mo>
          </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

         </mrow>
         <mrow><mi>k</mi>
         </mrow>
        </msup>
       </mrow>
       <mrow>
        <mrow>
         <msqrt>
          <mrow><mi>k</mi><mo>!</mo>
          </mrow>
         </msqrt>
         <msup>
          <mrow><mi> &sigma; </mi>
          </mrow>
          <mrow><mi>k</mi>
          </mrow>
         </msup>
        </mrow>
       </mrow>
      </mfrac><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mo>-</mo>
       <mfrac>
        <mrow><mn>1</mn>
        </mrow>
        <mrow>
         <mrow><mn>2</mn>
          <msup>
           <mrow><mi> &sigma; </mi>
           </mrow>
           <mrow><mn>2</mn>
           </mrow>
          </msup>
         </mrow>
        </mrow>
       </mfrac>
       <msup>
        <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

         <mrow><mi>x</mi><mo>'</mo>
         </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

        </mrow>
        <mrow><mn>2</mn>
        </mrow>
       </msup>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math> hence it is <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi> &psi; </mi>
    </mrow>
    <mrow><mi>k</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <mfrac>
    <mrow>
     <msup>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>k</mi>
      </mrow>
     </msup>
    </mrow>
    <mrow>
     <mrow>
      <msqrt>
       <mrow><mi>k</mi><mo>!</mo>
       </mrow>
      </msqrt>
      <msup>
       <mrow><mi> &sigma; </mi>
       </mrow>
       <mrow><mi>k</mi>
       </mrow>
      </msup>
     </mrow>
    </mrow>
   </mfrac><mo> exp </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo>-</mo>
    <mfrac>
     <mrow><mn>1</mn>
     </mrow>
     <mrow>
      <mrow><mn>2</mn>
       <msup>
        <mrow><mi> &sigma; </mi>
        </mrow>
        <mrow><mn>2</mn>
        </mrow>
       </msup>
      </mrow>
     </mrow>
    </mfrac>
    <msup>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msup>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>.</div>
</div>
</div>

<div class="standard" id='magicparlabel-230'><br />

</div>
<h2 class="section" id='magicparlabel-231'><span class="section_label">4</span> <a id="sec_Construction_of_kernels" />
Construction of kernels</h2>

<div class="standard" id='magicparlabel-240'><br />

</div>

<div class="note" id='magicparlabel-241'><div class="note_item"><span class="note_label">Note 27.</span>
The kernel formulated as an inner product in a feature space allows us to build interesting extensions of many well-known algorithms by making use of the kernel trick and without the need to have direct access to the feature space.</div>
</div>

<div class="standard" id='magicparlabel-242'><br />

</div>

<div class="note" id='magicparlabel-243'><div class="note_item"><span class="note_label">Note 28.</span>
Specifying a kernel function is a way to express prior knowledge without the need to have direct access to the feature space. This is consequence of the Representation theorem <a href="#thm__Representation_theorem__Assume">21</a> that kernel is the inner product of feature mappings <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> which sufficiently replaces them in the learning problem, and the fact that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> is a way to express and utilize prior knowledge about the problem at hand. </div>
</div>

<div class="standard" id='magicparlabel-249'><br />

</div>

<div class="note" id='magicparlabel-250'><div class="note_item"><span class="note_label">Note 29.</span>
The question is whether the specified function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> (by the practitioner) is indeed a kernel function; i.e. if <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>K</mi>
 </mrow></math> can be written as inner product <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math> of feature functions <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. Theorem <a href="#lem_A_symmetric_function">32</a> provides sufficient and necessary conditions to check that. </div>
</div>

<div class="standard" id='magicparlabel-251'><br />

</div>

<div class="definition" id='magicparlabel-252'><div class="definition_item"><span class="definition_label">Definition 30.</span>
Gram matrix is called the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>m</mi><mo> &times; </mo><mi>m</mi>
  </mrow>
 </mrow></math> matrix <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>G</mi>
 </mrow></math> s.t. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>G</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
     </mrow>
    </mrow>
   </msub><mo>=</mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>.</div>
</div>

<div class="standard" id='magicparlabel-258'><br />

</div>

<div class="definition" id='magicparlabel-259'><div class="definition_item"><span class="definition_label">Definition 31.</span>
A symmetric function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> is positive semi-definite if its Gram matrix <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>G</mi>
 </mrow></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>G</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
     </mrow>
    </mrow>
   </msub><mo>=</mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> , is a positive semi-definite matrix.</div>
</div>

<div class="standard" id='magicparlabel-260'><br />

</div>

<div class="theorem" id='magicparlabel-261'><div class="theorem_item"><span class="theorem_label">Theorem 32.</span>
<a id="lem_A_symmetric_function" />
A symmetric function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> <del class='strikeout'>implements an inner product in some Hilbert space</del> is a valid kernel function in terms of if and only if it is positive semi-definite i.e. its Gram matrix <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>G</mi>
 </mrow></math> , <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
<mi>G</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>

    </mrow>
    <mrow>
     <mrow><mi>i</mi><mo>,</mo><mi>j</mi>
     </mrow>
    </mrow>
   </msub><mo>=</mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> , is a positive semi-definite matrix.</div>

<div class="proof" id='magicparlabel-262'><div class="proof_item"><span class="proof_label">Proof.</span>
Assume <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>K</mi>
 </mrow></math> is a valid kernel function (i.e. it implements an inner product in some Hilbert space) <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math> ; let's consider <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> for simplicity. Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>G</mi>
 </mrow></math> be its Gram matrix with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>G</mi><mo>=</mo>
   <msup>
    <mrow><mo> &Psi; </mo>
    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup><mo> &Psi; </mo>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <msub>
    <mrow><mi>x</mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> is the <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>i</mi>
 </mrow></math>-th column of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mo> &Psi; </mo>
 </mrow></math>. For any <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &xi; </mi><mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup><mo>-</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mn>0</mn>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math> <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow>
     <msup>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup><mi>G</mi><mi> &xi; </mi>
    </mrow>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>i</mi>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mi>j</mi>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mo>=</mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mo>=</mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mo> &lang; </mo>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mo> &rang; </mo>
    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo><mo> &lang; </mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
     <msub>
      <mrow><mo> &sum; </mo>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <msub>
      <mrow><mi> &xi; </mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub><mo> &rang; </mo><mo>=</mo>
     <msubsup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

       <mrow>
        <msub>
         <mrow><mo> &sum; </mo>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub>
        <msub>
         <mrow><mi> &xi; </mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <msub>
         <mrow><mi>x</mi>
         </mrow>
         <mrow><mi>i</mi>
         </mrow>
        </msub>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>&par;</mo>

      </mrow>
      <mrow><mn>2</mn>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msubsup><mo> &ge; </mo><mn>0</mn>
    </mrow>
   </mtd>
  </mtr>
 </mtable></math>Assume the symmetric function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> is positive semi-definite. Let <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>f</mi>
    </mrow>
   </msup><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>

   <mrow><mi>f</mi><mo>:</mo>
    <mstyle mathvariant='script'><mi>X</mi>
    </mstyle><mo> &rarr; </mo>
    <mstyle mathvariant='double-struck'><mi>R</mi>
    </mstyle>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math>. For <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle>
  </mrow>
 </mrow></math> let function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> over <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msup>
   <mrow>
    <mstyle mathvariant='double-struck'><mi>R</mi>
    </mstyle>
   </mrow>
   <mrow><mi>f</mi>
   </mrow>
  </msup>
 </mrow></math> with <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &sdot; </mo><mo>,</mo><mi>x</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. This allows to define a vector space consisting of all the linear combinations of elements of the form <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &sdot; </mo><mo>,</mo><mi>x</mi>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, having an inner product <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &lang; </mo>
   <msub>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &sdot; </mo><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>i</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo>
   <msub>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &beta; </mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mo> &sdot; </mo><mo>,</mo>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mi>j</mi>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo><mo>=</mo>
   <msub>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mo> &sum; </mo>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &alpha; </mi>
    </mrow>
    <mrow><mi>i</mi>
    </mrow>
   </msub>
   <msub>
    <mrow><mi> &beta; </mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><munder accent='false'>
   <munder>
    <mrow>
     <mrow><mo> &lang; </mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mo> &sdot; </mo><mo>,</mo>
       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mi>i</mi>
        </mrow>
       </msub>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

      <mrow><mo> &sdot; </mo><mo>,</mo>
       <msub>
        <mrow><mi>x</mi>
        </mrow>
        <mrow><mi>j</mi>
        </mrow>
       </msub>
      </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
     </mrow>
    </mrow><mo stretchy="true">&UnderBrace;</mo>
   </munder>
   <mrow><mo>=</mo><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>i</mi>
      </mrow>
     </msub><mo>,</mo>
     <msub>
      <mrow><mi>x</mi>
      </mrow>
      <mrow><mi>j</mi>
      </mrow>
     </msub>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow></munder><mn>.</mn>
  </mrow>
 </mrow></math> This is satisfies all the properties of inner product, s.t. it is symmetric, linearity, positive definite as <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &ge; </mo><mn>0</mn>
  </mrow>
 </mrow></math>. Then there is some feature vector <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> such that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mo> &lang; </mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi> &psi; </mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo> &rang; </mo>
  </mrow>
 </mrow></math>.</div>
</div>
</div>

<div class="standard" id='magicparlabel-272'><br />

</div>

<div class="claim" id='magicparlabel-273'><div class="claim_item"><span class="claim_label">Claim 33.</span>
In Figure <a href="#fig_Non_linearly_separable_data">c</a>, we could see that examples can be distinguished by some ellipse, so it was reasonable to we can define <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi> &psi; </mi>
 </mrow></math> as a vector with elements all the monomials up to order ; alternatively we could use a degree <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mn>2</mn>
 </mrow></math> polynomial kernel. </div>
</div>

<div class="proposition" id='magicparlabel-274'><div class="proposition_item"><span class="proposition_label">Proposition 34.</span>
A powerful technique for constructing new kernels is to build them out of simpler kernels as building blocks. Below are some properties. Assume <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo>:</mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &times; </mo>
   <mstyle mathvariant='script'><mi>X</mi>
   </mstyle><mo> &rarr; </mo>
   <mstyle mathvariant='double-struck'><mi>R</mi>
   </mstyle>
  </mrow>
 </mrow></math> are valid kernels, then the following are kernels too</div>

<ol class="enumerate" id='magicparlabel-275'><li class="enumerate_item"><i><a id="enu_" />
<math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> </i></li>
<li class="enumerate_item"><i><a id="enu__1" />
<math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> </i></li>
<li class="enumerate_item"><i><math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo>,</mo><mi>x</mi>
    <msub>
     <mrow><mo>'</mo>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>+</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub><mo>,</mo><mi>x</mi>
    <msub>
     <mrow><mo>'</mo>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>1</mn>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo>'</mo><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>1</mn>
       </mrow>
      </msub><mo>'</mo><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msub><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math></i></li>
<li class="enumerate_item"><i><math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo>,</mo><mi>x</mi>
    <msub>
     <mrow><mo>'</mo>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>x</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub><mo>,</mo><mi>x</mi>
    <msub>
     <mrow><mo>'</mo>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>, where <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>1</mn>
       </mrow>
      </msub><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msub>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math> , <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo>'</mo><mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>1</mn>
       </mrow>
      </msub><mo>'</mo><mo>,</mo>
      <msub>
       <mrow><mi>x</mi>
       </mrow>
       <mrow><mn>2</mn>
       </mrow>
      </msub><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
  </mrow>
 </mrow></math></i></li>
<li class="enumerate_item"><i><math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> for any function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math></i></li>
<li class="enumerate_item"><i><math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>,</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

    <mrow><mi>x</mi><mo>'</mo>
    </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math> for any function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>f</mi>
 </mrow></math> </i></li>
</ol>

<div class="solution_" id='magicparlabel-281'><div class="solution__item"><span class="solution__label">Solution.</span>
<div class="marginal"><div class="plain_layout" id='magicparlabel-285'>See the proof as a solution to an Example</div>
</div>We present the first two and the rest are proved similarly. </div>

<ol class='lyxlist' id='magicparlabel-286'><li class="labeling_item"><span class='lyxlist'>For&nbsp;(<a href="#enu_">1.</a>).</span>
 Let Gram matrix, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>G</mi>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math> induced by kernel function <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <msub>
   <mrow><mi>K</mi>
   </mrow>
   <mrow><mi>j</mi>
   </mrow>
  </msub>
 </mrow></math>. For any <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &xi; </mi><mo> &isin; </mo>
   <msup>
    <mrow>
     <mstyle mathvariant='double-struck'><mi>R</mi>
     </mstyle>
    </mrow>
    <mrow><mi>d</mi>
    </mrow>
   </msup><mo>-</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>{</mo>
<mn>0</mn>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>}</mo>

  </mrow>
 </mrow></math><math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msup>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
   <msub>
    <mrow><mi>G</mi>
    </mrow>
    <mrow><mn>3</mn>
    </mrow>
   </msub><mi> &xi; </mi><mo>=</mo>
   <msup>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow>
    <msub>
     <mrow><mi>G</mi>
     </mrow>
     <mrow><mn>1</mn>
     </mrow>
    </msub><mo>+</mo>
    <msub>
     <mrow><mi>G</mi>
     </mrow>
     <mrow><mn>2</mn>
     </mrow>
    </msub>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mi> &xi; </mi><mo>=</mo>
   <msup>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
   <msub>
    <mrow><mi>G</mi>
    </mrow>
    <mrow><mn>1</mn>
    </mrow>
   </msub><mi> &xi; </mi><mo>+</mo>
   <msup>
    <mrow><mi> &xi; </mi>
    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
   <msub>
    <mrow><mi>G</mi>
    </mrow>
    <mrow><mn>2</mn>
    </mrow>
   </msub><mi> &xi; </mi><mo> &ge; </mo><mn>0</mn>
  </mrow>
 </mrow></math></li>
<li class="labeling_item"><span class='lyxlist'>For&nbsp;(<a href="#enu__1">2.</a>).</span>
 Assume that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow>
   <msub>
    <mrow><mi>K</mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

   <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
   </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
   <msup>
    <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow>
      <msub>
       <mrow><mi> &psi; </mi>
       </mrow>
       <mrow><mi>j</mi>
       </mrow>
      </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
    <mrow><mi> &top; </mi>
    </mrow>
   </msup>
   <msub>
    <mrow><mi> &psi; </mi>
    </mrow>
    <mrow><mi>j</mi>
    </mrow>
   </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

  </mrow>
 </mrow></math>. Then <math display="block" xmlns="http://www.w3.org/1998/Math/MathML">
 <mtable>
  <mtr>
   <mtd>
    <mrow><mi>K</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msub>
      <mrow><mi>K</mi>
      </mrow>
      <mrow><mn>1</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <msub>
      <mrow><mi>K</mi>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>,</mo><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi> &psi; </mi>
         </mrow>
         <mrow><mn>1</mn>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup>
     <msub>
      <mrow><mi> &psi; </mi>
      </mrow>
      <mrow><mn>1</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi> &psi; </mi>
         </mrow>
         <mrow><mn>2</mn>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup>
     <msub>
      <mrow><mi> &psi; </mi>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
  <mtr>
   <mtd><mrow/>
   </mtd>
   <mtd>
    <mrow><mo>=</mo>
     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi> &psi; </mi>
         </mrow>
         <mrow><mn>1</mn>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup>
     <msub>
      <mrow><mi> &psi; </mi>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi> &psi; </mi>
         </mrow>
         <mrow><mn>1</mn>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow><mi>x</mi><mo>'</mo>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup>
     <msub>
      <mrow><mi> &psi; </mi>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
<mo>=</mo>
     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msup>
         <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

          <mrow>
           <msub>
            <mrow><mi> &psi; </mi>
            </mrow>
            <mrow><mn>1</mn>
            </mrow>
           </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

          </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

         </mrow>
         <mrow><mi> &top; </mi>
         </mrow>
        </msup>
        <msub>
         <mrow><mi> &psi; </mi>
         </mrow>
         <mrow><mn>2</mn>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
<mi>x</mi>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup>
     <msup>
      <mrow><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

       <mrow>
        <msub>
         <mrow><mi> &psi; </mi>
         </mrow>
         <mrow><mn>1</mn>
         </mrow>
        </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

        <mrow><mi>x</mi><mo>'</mo>
        </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

       </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

      </mrow>
      <mrow><mi> &top; </mi>
      </mrow>
     </msup>
     <msub>
      <mrow><mi> &psi; </mi>
      </mrow>
      <mrow><mn>2</mn>
      </mrow>
     </msub><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>

     <mrow><mi>x</mi><mo>'</mo>
     </mrow>
<mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>

    </mrow>
   </mtd>
  </mtr>
 </mtable></math> which can be represented as an inner product of feature vectors.</li>
</ol>
</div>
</div>

<div class="standard" id='magicparlabel-296'><br />

</div>

<div class="note" id='magicparlabel-297'><div class="note_item"><span class="note_label">Note 35.</span>
The concept of a kernel formulated as an inner product in a feature space allows us to build interesting extensions of many well-known algorithms by making use of the kernel trick. One example was the Kernel SVM. Some other popular cases are Gaussian process regression, and Kernel PCA.</div>
</div>
</body>
</html>
